{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/admin-panel/admin-panel.component.ts","./src/app/admin-panel/admin-panel.component.html","./src/app/admin-panel/test/test-create/test-create.component.ts","./src/app/admin-panel/test/test-create/test-create.component.html","./src/app/admin-panel/test/test-edit/test-edit.component.ts","./src/app/admin-panel/test/test-edit/test-edit.component.html","./src/app/admin-panel/test/test-form/test-form.component.ts","./src/app/admin-panel/test/test-form/test-form.component.html","./src/app/admin-panel/test/test-list/test-list.component.ts","./src/app/admin-panel/test/test-list/test-list.component.html","./src/app/admin-panel/user-test/user-test-create/user-test-create.component.ts","./src/app/admin-panel/user-test/user-test-create/user-test-create.component.html","./src/app/admin-panel/user-test/user-test-edit/user-test-edit.component.ts","./src/app/admin-panel/user-test/user-test-edit/user-test-edit.component.html","./src/app/admin-panel/user-test/user-test-form-mt/user-test-form-mt.component.ts","./src/app/admin-panel/user-test/user-test-form-mt/user-test-form-mt.component.html","./src/app/admin-panel/user-test/user-test-form-ut/user-test-form-ut.component.ts","./src/app/admin-panel/user-test/user-test-form-ut/user-test-form-ut.component.html","./src/app/admin-panel/user-test/user-test-list/user-test-list.component.ts","./src/app/admin-panel/user-test/user-test-list/user-test-list.component.html","./src/app/admin-panel/user/user-edit/user-edit.component.ts","./src/app/admin-panel/user/user-edit/user-edit.component.html","./src/app/admin-panel/user/user-form/user-form.component.ts","./src/app/admin-panel/user/user-form/user-form.component.html","./src/app/admin-panel/user/user-list/user-list.component.ts","./src/app/admin-panel/user/user-list/user-list.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/forbidden/forbidden.component.ts","./src/app/forbidden/forbidden.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/models/answer.ts","./src/app/models/question.ts","./src/app/models/test.ts","./src/app/models/testResult.ts","./src/app/services/account.service.ts","./src/app/services/answer.service.ts","./src/app/services/auth.service.ts","./src/app/services/question.service.ts","./src/app/services/test.service.ts","./src/app/services/user.service.ts","./src/app/services/usertest.service.ts","./src/app/test-info/test-info.component.ts","./src/app/test-info/test-info.component.html","./src/app/test-start/exit.test-start.guard.ts","./src/app/test-start/test-start.component.ts","./src/app/test-start/test-start.component.html","./src/app/user/confirm-email/confirm-email.component.ts","./src/app/user/confirm-email/confirm-email.component.html","./src/app/user/external-login/external-login.component.ts","./src/app/user/external-login/external-login.component.html","./src/app/user/forgot-password/forgot-password.component.ts","./src/app/user/forgot-password/forgot-password.component.html","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/registration/registration.component.ts","./src/app/user/registration/registration.component.html","./src/app/user/reset-password/reset-password.component.ts","./src/app/user/reset-password/reset-password.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserTestService } from '../services/usertest.service';\nimport { UserService } from '../services/user.service';\nimport { ChangePassword } from '../models/changePassword';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../services/account.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n\n})\nexport class AccountComponent implements OnInit {\n\n  userId: string;\n  userDetails;\n  userTests;\n  password: ChangePassword;\n  pas1: string = \"oldpass\";\n  pas2: string = \"newpass\";\n  pas3: string = \"confpass\";\n\n  constructor(private userTestService: UserTestService, public accountService: AccountService, \n              private toastr: ToastrService, private userService: UserService, activeRoute: ActivatedRoute) {\n    this.userId = activeRoute.snapshot.params[\"id\"];\n  }\n\n  ngOnInit() {\n    if(!this.userId){\n      this.accountService.usernameModel.reset();\n      this.accountService.passwordModel.reset();\n      this.loadUserProfile();\n    }\n    else{\n      this.loadStrangeUserProfile();\n    }\n  }\n\n  loadUserProfile(){\n    this.accountService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res;\n        this.loadUserTests();\n      },\n      err => {\n        console.log(err);\n      },\n    );\n  }\n  \n  loadUserTests(){\n    this.userTestService.getUserTestsByUserId(this.userDetails[\"id\"])\n      .subscribe((data: object[]) =>{\n         this.userTests = data;\n      })\n  }\n\n  showChangePassword(){\n    this.accountService.passwordModel.reset(); \n  }\n\n  showChangeUsername(){\n    this.accountService.usernameModel.reset();\n  }\n\n  showChangeEmail(){\n    this.accountService.newEmailModel.reset();\n  }\n  \n  changePassword(){\n    this.accountService.changePassword(this.userDetails[\"id\"]).subscribe(\n      (res: any) => {\n        console.log(res);\n        if (res.succeeded) {\n          this.accountService.passwordModel.reset();\n          this.toastr.success('Пароль был изменен.', 'Успешно.');\n        } \n        else{\n          res.errors.forEach(element => {\n            switch (element.code) {\n              case 'PasswordMismatch':\n                this.toastr.error('Старый пароль введен неверно.','Пароль не был изменен.');\n                break;\n\n              default:\n              this.toastr.error(element.description,'Пароль не был изменен.');\n                break;\n            }\n          });\n        }\n      },\n      err => {\n        if (err.error == \"Old and new password are same\"){\n          this.toastr.error('Старый и новый пароли совпадают.', 'Пароль не был изменен.');\n        }\n        console.log(err);\n      }\n    );\n  }\n\n  changeEmail(){\n    this.accountService.changeEmail(this.userDetails[\"email\"]).subscribe(\n      data => {\n        this.accountService.newEmailModel.reset();\n        this.toastr.success('Для продолжения, перейдите по ссылке, которая была отправлена на указаную почту.', 'Успешно.');\n      },\n      err => {\n        if(err.error == \"User with this email already exists\"){\n          this.toastr.error(\"Данная почта уже занята.\",\"Безуспешно.\")\n        }\n      }\n    )\n  }\n\n  changeUsername(){\n    this.accountService.changeUsername(this.userDetails.username).subscribe(\n      data => {\n        this.loadUserProfile();\n        this.accountService.usernameModel.reset();\n        this.toastr.success('Имя пользователя было изменено.', 'Успешно.');\n      },\n      err => {\n        if (err.error == \"User with this username already exists\"){\n          this.toastr.error('Пользователь с таким именем уже существует.', 'Имя пользователя не было изменено.');\n        }\n        else if(err.error == \"Username can not be the same as current\"){\n          this.toastr.error('Новое имя пользователя не должно совпадать с текущим.', 'Имя пользователя не было изменено.');\n        }\n        console.log(err);\n      }\n    );\n  }\n\n  changeProfileImage(){\n    var profileImageUrl = (document.getElementById(\"profileImageUrl\") as HTMLInputElement).value;\n    var img = document.createElement(\"img\");\n    img.src = profileImageUrl;\n    img.onerror = () => {\n      this.toastr.error(\"Ссылка на картинку недействительна.\", \"Безуспешно.\");\n    }\n    img.onload = () => {\n      this.accountService.changeProfileImage(this.userDetails.email, profileImageUrl).subscribe(\n        data => {\n          this.loadUserProfile();\n          (document.getElementById(\"profileImageUrl\") as HTMLInputElement).value = \"\";\n          this.toastr.success('Аватар был изменен', 'Успешно.');\n        },\n        err => {\n          this.toastr.error('Что-то пошло не так.','Безуспешно.');\n        }\n      );\n    }\n  }\n\n  changeAboutMe(){\n    let aboutMe = (document.getElementById(\"aboutMe\") as HTMLInputElement).value;\n    if(aboutMe.length > 50){\n      this.toastr.error('Максимальная длина информации 50 символов.','Безуспешно.');\n    }\n    else{\n      this.accountService.changeAboutMe(this.userDetails.email, aboutMe).subscribe(\n        data => {\n          this.loadUserProfile();\n          (document.getElementById(\"aboutMe\") as HTMLInputElement).value = \"\";\n          this.toastr.success('Информация `О себе была` изменена.', 'Успешно.');\n        },\n        err => {\n          this.toastr.error('Что-то пошло не так.','Безуспешно.');\n        }\n      );\n    }\n  }\n\n  show_hide_password(el){\n    if(el == \"oldpass\"){\n      var input = document.getElementById('old-password');\n      var eye = document.getElementById('old-passeye');\n    }\n    else if(el == \"newpass\"){\n      var input = document.getElementById('new-password');\n      var eye = document.getElementById('new-passeye');\n    }\n    else{\n      var input = document.getElementById('conf-password');\n      var eye = document.getElementById('conf-passeye');\n    }\n    if (input.getAttribute('type') == 'password') {\n      eye.classList.add('view');\n      input.setAttribute('type', 'text');\n    } else {\n      eye.classList.remove('view');\n      input.setAttribute('type', 'password');\n    }\n    return false;\n  }\n\n  loadStrangeUserProfile(){\n    this.userService.getUser(this.userId).subscribe(\n      data => {\n        this.userDetails = data;\n        this.loadUserTests();\n      }\n    )\n  }\n}\n"," <div class=\"container\">\n    <h2 style=\"text-align: center; margin: 10px;\">Личный кабинет</h2>\n    <div class=\"row  d-flex justify-content-center\">\n        <div class=\"col-6\" *ngIf=\"userDetails\">\n            <div class=\"d-flex justify-content-center align-items-center\" style=\"border: 3px solid grey; border-radius: 10px;\">\n                <div class=\"col-4\">\n                    <img src=\"{{userDetails.profileImageUrl}}\" class=\"img-thumbnail\">\n                </div>\n                <div class=\"card-body col-6\">\n                    <ul class=\"list-group\">\n                        <li class=\"list-group-item\"><strong>Имя пользователя: </strong>{{userDetails.username}}</li>\n                        <li class=\"list-group-item\" *ngIf=\"!userId\"><strong>Почта: </strong>{{userDetails.email}}</li>\n                        <li class=\"list-group-item\"><strong>О себе:</strong><p style=\"word-break: break-all\">{{userDetails.aboutMe}}</p></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-12 d-flex justify-content-center\" *ngIf=\"!userId\">\n            <button class=\"btn btn-info place m-3\" (click)=\"showChangePassword()\" data-toggle=\"modal\" data-target=\"#modalchangepass\">Изменить пароль</button>\n            <button class=\"btn btn-info place m-3\" (click)=\"showChangeEmail()\" data-toggle=\"modal\" data-target=\"#modachangeemail\">Изменить Email</button>\n            <button class=\"btn btn-info place m-3\" (click)=\"showChangeUsername()\" data-toggle=\"modal\" data-target=\"#modachangename\">Изменить имя пользователя</button>\n            <button class=\"btn btn-info place m-3\" data-toggle=\"modal\" data-target=\"#modachangeprofileimage\">Изменить аватар</button>\n            <button class=\"btn btn-info place m-3\" data-toggle=\"modal\" data-target=\"#modachangeaboutme\">Изменить 'О себе'</button>\n        </div>\n        <div class=\"col-12\">\n            <h3 style=\"text-align: center;\">Пройденные тесты</h3>\n            <table class=\"table mtable m-3\" style=\"height: auto;\">\n                <thead>\n                    <tr>\n                        <td>Тест</td>\n                        <td>Результат</td>\n                        <td>Время</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let u of userTests\">\n                        <td>{{u?.test}}</td>\n                        <td>{{u?.mark}}%</td>\n                        <td>{{u?.time.substring(14)}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    \n    <div class=\"modal fade\" id=\"modachangeemail\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Изменение электронной почты</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"accountService.newEmailModel\" autocomplete=\"off\" (submit)=\"changeEmail()\">\n                    <div class=\"form-group required\">\n                        <label>Новый Email</label>\n                        <input class=\"form-control\" formControlName=\"UserEmail\">\n                        <label class=\"text-danger\" *ngIf=\"accountService.newEmailModel.get('UserEmail').touched && accountService.newEmailModel.get('UserEmail').errors?.required\">\n                          Это поле обязательно.\n                        </label>\n                        <label class=\"text-danger\" *ngIf=\"accountService.newEmailModel.get('UserEmail').touched && accountService.newEmailModel.get('UserEmail').errors?.email\">\n                            Почта введена неверно.\n                        </label>\n                    </div>\n                    <div class=\"form-row  text-center\">\n                        <div class=\"form-group col-12\">\n                          <button type=\"submit\" class=\"btn btn-lg btn-success\" [disabled]=\"!accountService.newEmailModel.valid\">Изменить</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n          </div>\n        </div>\n    </div>\n\n    <div class=\"modal fade\" id=\"modachangename\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"  aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Изменение имени пользователя</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"accountService.usernameModel\" autocomplete=\"off\" (submit)=\"changeUsername()\">\n                    <div class=\"form-group required\">\n                        <label>Новое имя пользователя</label>\n                        <input class=\"form-control\" formControlName=\"NewUsername\">\n                        <label class=\"text-danger\" *ngIf=\"accountService.usernameModel.get('NewUsername').touched && accountService.usernameModel.get('NewUsername').errors?.required\">\n                          Это поле обязательно.\n                        </label>\n                    </div>\n                    <div class=\"form-row text-center\">\n                        <div class=\"form-group col-12\">\n                          <button type=\"submit\" class=\"btn btn-lg btn-success\" [disabled]=\"!accountService.usernameModel.valid\">Изменить</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n          </div>\n        </div>\n    </div>\n\n    <div class=\"modal fade\" id=\"modachangeprofileimage\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Изменение аватара</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"form-group required\">\n                    <label>Ссылка на новый аватар</label>\n                    <input class=\"form-control\" id=\"profileImageUrl\">\n                </div>\n                <div class=\"form-row text-center\">\n                    <div class=\"form-group col-12\">\n                      <button type=\"submit\" class=\"btn btn-lg btn-success\" (click)=\"changeProfileImage()\">Изменить</button>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n    </div>\n\n    <div class=\"modal fade\" id=\"modachangeaboutme\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Изменение 'О себе'</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"form-group required\">\n                    <label>О себе</label>\n                    <input class=\"form-control\" id=\"aboutMe\">\n                </div>\n                <div class=\"form-row text-center\">\n                    <div class=\"form-group col-12\">\n                      <button type=\"submit\" class=\"btn btn-lg btn-success\" (click)=\"changeAboutMe()\">Изменить</button>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n    </div>\n\n    <div class=\"modal fade\" id=\"modalchangepass\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Изменение пароля</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"accountService.passwordModel\" autocomplete=\"off\" (submit)=\"changePassword()\">\n                    <div formGroupName=\"Passwords\">\n                        <div class=\"form-group required\">\n                            <label>Старый пароль</label><br>\n                            <div class=\"password\">\n                                <input type=\"password\" id=\"old-password\" class=\"form-control\" formControlName=\"OldPassword\">\n                                <a href=\"#\" id=\"old-passeye\" class=\"password-control\" (click)=\"show_hide_password(pas1)\"></a>\n                            </div>\n                            <label class=\"text-danger\" *ngIf=\"accountService.passwordModel.get('Passwords.OldPassword').touched && accountService.passwordModel.get('Passwords.OldPassword').errors?.required\">\n                              Это поле обязательно.\n                            </label>\n                        </div>\n                        <div class=\"form-group required\">\n                            <label>Новый пароль</label><br>\n                            <div class=\"password\">\n                                <input type=\"password\" id=\"new-password\" class=\"form-control\" formControlName=\"Password\">\n                                <a href=\"#\" id=\"new-passeye\" class=\"password-control\" (click)=\"show_hide_password(pas2)\"></a>\n                            </div>                    \n                            <label class=\"text-danger\" *ngIf=\"accountService.passwordModel.get('Passwords.Password').touched && accountService.passwordModel.get('Passwords.Password').errors?.required\">\n                                Это поле обязательно.\n                            </label>\n                            <label class=\"text-danger\" *ngIf=\"accountService.passwordModel.get('Passwords.Password').touched && accountService.passwordModel.get('Passwords.Password').errors?.minlength\">\n                                Пароль должен состоять минимум из 6 символов.\n                            </label>\n                        </div>\n                        <div class=\"form-group required\">\n                            <label>Подтвердите пароль</label><br>\n                            <div class=\"password\">\n                                <input type=\"password\" id=\"conf-password\" class=\"form-control\" formControlName=\"ConfirmPassword\">\n                                <a href=\"#\" id=\"conf-passeye\" class=\"password-control\" (click)=\"show_hide_password(pas3)\"></a>\n                            </div>\n                            <label class=\"text-danger\" *ngIf=\"accountService.passwordModel.get('Passwords.ConfirmPassword').touched && accountService.passwordModel.get('Passwords.ConfirmPassword').errors?.required\">\n                              Это поле обязательно.\n                            </label>\n                            <label class=\"text-danger\" *ngIf=\"accountService.passwordModel.get('Passwords.ConfirmPassword').touched && accountService.passwordModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\">\n                              Пароли не совпадают.\n                            </label>\n                        </div>\n                    </div>\n                    <div class=\"form-row text-center\">\n                        <div class=\"form-group col-12\">\n                          <button type=\"submit\" class=\"btn btn-lg btn-success\" [disabled]=\"!accountService.passwordModel.valid\">Изменить</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n          </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user';\n\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styles: [] \n})\nexport class AdminPanelComponent implements OnInit {\n\n  users: User[];\n  constructor(private router: Router, private userService: UserService) { }\n\n  ngOnInit() {\n    this.loadUsers();\n  }\n\n  loadUsers(){\n    this.userService.getUsers()\n        .subscribe((data: User[]) => {\n          this.users = data;\n        });\n  }\n}\n","<div class=\"text-center\">\n    <button class=\"btn btn-info m-3\" routerLink='/admin-panel/user-list' routerLinkActive='active'>Пользователи</button>\n    <button class=\"btn btn-info m-3\" routerLink='/admin-panel/test-list' routerLinkActive='active'>Тесты</button>\n    <button class=\"btn btn-info m-3\" routerLink='/admin-panel/user-test-list' routerLinkActive='active'>Результаты</button>\n</div>\n<router-outlet></router-outlet>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Test } from 'src/app/models/test';\nimport { TestService } from 'src/app/services/test.service';\nimport { Route } from '@angular/compiler/src/core';\nimport { Router } from '@angular/router';\nimport { Question } from 'src/app/models/question';\nimport { Answer } from 'src/app/models/answer';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { AnswerService } from 'src/app/services/answer.service';\nimport { forkJoin, of, from } from 'rxjs';\nimport { mergeMap, map, mergeAll, concatMap, tap, finalize } from 'rxjs/operators';\nimport { TestFormComponent } from '../test-form/test-form.component';\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-test-create',\n  templateUrl: './test-create.component.html',\n  styleUrls: []\n})\nexport class TestCreateComponent implements OnInit {\n\n  test;\n  questions = [];\n  hideQuestions: boolean = true;\n  testCreated: boolean;\n  questionsCreated: boolean;\n  end: boolean;\n  sas: Map<object, number[]>;\n\n  constructor(private fb: FormBuilder, public testService: TestService, public questionService: QuestionService,\n              public answerService: AnswerService, private toastr: ToastrService, private router: Router) { }\n\n  ngOnInit(): void { \n    this.test = new Test;\n  }\n\n  questionModel = this.fb.group({\n    Content: ['', Validators.required],\n    AnswersCount: ['', [this.answerCountRangeValidator, Validators.required]]\n  });\n\n  answerModel = this.fb.group({\n    Content: ['', Validators.required],\n    Mark: ['', [this.markRangeValidator, Validators.required]]\n  });\n\n  create(){\n    let testTime = new Date();\n    let Time = this.test.maxTime.split(\":\");\n    testTime.setMinutes(Time[0]);\n    testTime.setSeconds(Time[1]);\n    testTime.setMilliseconds(0);\n    this.test.maxTime = testTime;\n    this.test.maxScore = Number(this.test.maxScore);\n    for(let i = 0; i < this.test.maxScore; i++){\n      this.questions.push(i);\n    }\n    this.testCreated = true;\n  }\n\n  next(){\n    this.sas = new Map<object, number[]>();\n    for(let i = 0; i < this.questions.length; i++){\n      let q = document.getElementById(`q_${i+1}`) as HTMLInputElement;\n      let t = document.getElementById(`t_${i+1}`) as HTMLInputElement;\n      let a = document.getElementById(`a_${i+1}`) as HTMLInputElement;\n      let cad = document.getElementById(`cad_${i+1}`) as HTMLInputElement;\n      let isSin = true;\n      if(t.checked){\n        isSin = false;\n      }\n      let quest = {\n        content: q.value,\n        answerDescription: cad.value == null ? null : cad.value,\n        isSingle: isSin\n      };\n      let help = [];\n      for(let j = 0; j < Number(a.value); j++){\n        help.push(j);\n      }\n      this.sas.set(quest, help);\n    }\n    this.questionsCreated = true;\n    this.hideQuestions = false;\n  }\n\n  onSubmit(){\n    this.test.maxScore = 0;\n    this.testService.createTest(this.test).subscribe(data => {\n          this.fillQuest();\n      });\n  }\n\n  fillQuest(){\n    let i = 0;\n    from(this.sas).pipe(\n      concatMap(item => {\n        // get question info\n        let q = document.getElementById(`q_${i+1}`) as HTMLInputElement;\n        let t = document.getElementById(`t_${i+1}`) as HTMLInputElement;\n        let cad = document.getElementById(`cad_${i+1}`) as HTMLInputElement;\n        let isSin = true;\n        if(t.checked){\n            isSin = false;\n        }\n        let question = new Question();\n        question.Content = q.value;\n        question.IsSingle = isSin;\n        question.AnswerDescription = cad.value;\n\n        // get answers for this question\n        let answers = [];\n        for(let j of item[1]){\n            let isCorrect = document.getElementById(`a_isCorrect_${i}:${j}`) as unknown as HTMLInputElement;\n            let content = document.getElementById(`a_content_${i}:${j}`) as unknown as HTMLInputElement;\n            let mark =  document.getElementById(`a_mark_${i}:${j}`) as unknown as HTMLInputElement;\n\n            let answer = new Answer();\n            answer.IsCorrect = isCorrect.checked;\n            answer.Content = content.value;\n            answer.Mark = Number(mark.value);\n            answers.push(answer);\n            j++;\n        }\n        i++;\n\n        //post question\n        return this.questionService.createQuestionForNewTest(question).pipe(\n            concatMap(data=> {\n                console.log(`question ${question.Content} done`);\n                return from(answers).pipe(\n                    concatMap(answer => this.answerService.createAnswerForNewQuestion(answer).pipe(\n                        tap(data => console.log(`answer ${answer} done` ) ),\n                    )),\n                    finalize(() => {\n                        console.log(\"done\");\n                    }),\n                );\n            }),\n        );\n    }),\n    finalize(() => {\n      this.router.navigateByUrl(\"/admin-panel\");\n      this.toastr.success(\"Тест был создан.\", \"Успешно.\");\n      this.end = true;\n    }),\n    ).subscribe();\n  }\n\n  answerCountRangeValidator(control: AbstractControl): { [key: string]: boolean } | null {\n    if (control.value !== undefined && (isNaN(control.value) || control.value < 0 || control.value > 50)) {\n        return { 'answerCountRange': true };\n    }\n    return null;\n  }\n\n  markRangeValidator(control: AbstractControl): { [key: string]: boolean } | null {\n    if (control.value !== undefined && (isNaN(control.value) || control.value < -100 || control.value > 100)) {\n        return { 'markRange': true };\n    }\n    return null;\n  }\n}","    <div class=\"container\">\n        <div class=\"row justify-content-center\" *ngIf=\"!testCreated\">\n            <div class=\"col-12 col-md-8 col-lg-6 pb-5\">\n                <h2 class=\"text-center\">Информация по тесту</h2>\n                <test-form [(test)]=\"test\"></test-form>\n                <div class=\"form-group text-center\">\n                    <input type=\"button\" value=\"Создать\" (click)=\"create()\" class=\"btn btn-success\" [disabled]=\"!testService.testModel.valid\"/>\n                </div>\n            </div>\n        </div> \n        <div *ngIf = \"testCreated\">\n            <div *ngFor = \"let i of questions\">\n                <form [formGroup]=\"questionModel\" class=\"mx-3\" autocomplete=\"off\">\n                    <span>{{i+1}}.</span>\n                    <span>Несколько правильных ответов?</span><input class=\"ml-2\" type=\"checkbox\" id=\"t_{{i+1}}\"/>\n                    <input type=\"text\" class=\"mx-3\" formControlName=\"Content\" id=\"q_{{i+1}}\" placeholder=\"Текст вопроса\">\n                    <label class=\"text-danger\" *ngIf=\"questionModel.get('Content').touched && questionModel.get('Content').errors?.required\">\n                        Это поле обязательно.\n                    </label>\n                    <input type=\"text\" class=\"mx-3\" id=\"cad_{{i+1}}\" placeholder=\"Объяснение ответа\">\n                    <input type=\"text\" formControlName=\"AnswersCount\" id=\"a_{{i+1}}\" placeholder=\"Количество ответов\">\n                    <label class=\"text-danger\" *ngIf=\"questionModel.get('AnswersCount').touched && questionModel.get('AnswersCount').errors?.answerCountRange\">\n                        Количество вопросов введено неверно.\n                    </label>\n                    <label class=\"text-danger\" *ngIf=\"questionModel.get('AnswersCount').touched && questionModel.get('AnswersCount').errors?.required\">\n                        Это поле обязательно.\n                    </label>\n                </form>\n                <br>\n            </div>\n            <div *ngIf=\"hideQuestions\">\n                <div class=\"form-group\">\n                    <input type=\"button\" value=\"Далее\" (click)=\"next()\" [disabled]=\"!questionModel.valid\" class=\"btn btn-success\"/>\n                </div>\n            </div>\n        </div>\n        <div *ngIf = \"questionsCreated\">\n            <div *ngFor=\"let item of sas | keyvalue; let i = index\">\n                <form name=\"form_{{i}}\" [formGroup]=\"answerModel\" autocomplete=\"off\">\n                    <p><b>{{i+1}}. {{item.key.content}}</b></p>\n                    <div *ngFor=\"let s of item.value; let j = index;\">\n                        <div class=\"col-12\">\n                            <div class=\"row\">\n                                <span>Правильный?</span>\n                                <div class=\"mx-1\">\n                                    <div *ngIf=\"item.key.isSingle; else isMultiple\">\n                                        <input type=\"radio\" id=\"a_isCorrect_{{i}}:{{j}}\" name=\"a_isCorrect_{{i}}\"/>\n                                    </div>\n                                    <ng-template #isMultiple>\n                                        <input type=\"checkbox\" id=\"a_isCorrect_{{i}}:{{j}}\" name=\"a_isCorrect_{{i}}\"/>\n                                    </ng-template>\n                                </div>\n                                <input type=\"text\" class=\"mx-2\" formControlName=\"Content\" placeholder=\"Контент\" id=\"a_content_{{i}}:{{j}}\" name=\"a_content\"/> \n                                <label class=\"text-danger\" *ngIf=\"answerModel.get('Content').touched && answerModel.get('Content').errors?.required\">\n                                    Это поле обязательно.\n                                </label>\n                                <input type=\"text\" class=\"mx-2\" formControlName=\"Mark\" placeholder=\"Бал\" id=\"a_mark_{{i}}:{{j}}\" name=\"a_mark\"/>\n                                <label class=\"text-danger\" *ngIf=\"answerModel.get('Mark').touched && answerModel.get('Mark').errors?.markRange\">\n                                    Количество вопросов введено неверно.\n                                </label>\n                                <label class=\"text-danger\" *ngIf=\"answerModel.get('Mark').touched && answerModel.get('Mark').errors?.required\">\n                                    Это поле обязательно.\n                                </label>        \n                            </div>\n                        </div> \n                    </div>\n                </form>\n                <br />\n            </div>\n            <div *ngIf=\"!end\">\n                <button class=\"btn btn-success\" style=\"margin-bottom: 20px; margin-left: 10px;\" type=\"submit\" [disabled]=\"!answerModel.valid\" (click)=\"onSubmit()\">Создать</button>\n            </div>\n        </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { TestService } from 'src/app/services/test.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Test } from 'src/app/models/test';\nimport { Question } from 'src/app/models/question';\nimport { Answer } from 'src/app/models/answer';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { concatMap, tap, finalize } from 'rxjs/operators';\nimport { AnswerService } from 'src/app/services/answer.service';\nimport { from } from 'rxjs';\nimport { convertActionBinding } from '@angular/compiler/src/compiler_util/expression_converter';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-test-edit',\n  templateUrl: './test-edit.component.html',\n  styles: [\n  ]\n})\nexport class TestEditComponent implements OnInit {\n\n  testInfo: Map<Question, Answer[]>;\n  testId;\n  test: Test;\n  loaded: boolean;\n  showAddQuestion: boolean;\n  showFillQuestion: boolean;\n  questIdForNewAns;\n  newQuestion;\n  answersCount;\n\n  constructor(public testService: TestService, \n              private router: Router, \n              private questionService: QuestionService,\n              private answerService: AnswerService,\n              private toastr: ToastrService,\n              activeRoute: ActivatedRoute) {\n      this.testId = activeRoute.snapshot.params[\"id\"];\n  }\n\n  ngOnInit(){\n    if(this.testId){\n      this.testService.testModel.reset();\n      this.loadTest(true);\n    }\n  }\n\n  loadTest(withQA: boolean){\n    this.testService.getTestById(this.testId)\n      .subscribe((data: Test) =>{\n          this.test = data;\n          if(withQA == true){\n            this.loadTestInfoGet();\n          }\n      })\n  }\n\n  loadTestInfoGet() {\n    let testInfoGet = new Map<string, Answer[]>();\n    this.testService.getTestStart(this.testId)\n        .subscribe((data: Map<string, Answer[]>) => {\n            testInfoGet = data; this.loaded = true;\n            this.fillQuestions(testInfoGet);\n        })\n  }\n\n  fillQuestions(testInfoGet: Map<string, Answer[]>) {\n    this.testInfo = new Map<Question, Answer[]>();\n    for (let t in testInfoGet) {\n        this.questionService.getQuestionById(Number(t))\n            .subscribe((data1: Question) => {\n                this.fillTestInfo(testInfoGet, data1);\n            })\n    }\n  }\n\n  fillTestInfo(testInfo: Map<string, Answer[]>, question: Question) {\n    this.testInfo.set(question, testInfo[question[\"questionId\"].toString()]);\n  }\n\n  deleteQuestion(questionId: number){\n    this.questionService.deleteQuestion(questionId).subscribe(data => {\n       this.loadTestInfoGet();\n       this.toastr.success(\"Вопрос был удален.\",\"Успешно.\");\n      });\n  }\n\n  deleteAnswer(answerId: number){\n    this.answerService.deleteAnswer(answerId).subscribe(data => { \n      this.loadTestInfoGet();\n      this.toastr.success(\"Ответ был удален.\",\"Успешно.\");\n    });\n  }\n\n  addQuestion(){\n    this.showAddQuestion=true;\n  }\n\n  next(){\n    let isMultiple = document.getElementById('isMultiple') as HTMLInputElement;\n    let content = document.getElementById('content') as HTMLInputElement;\n    let answersCount = document.getElementById('answersCount') as HTMLInputElement;\n    let answerDescription = document.getElementById('ansDesc') as HTMLInputElement;\n    this.newQuestion = {\n      content: content.value,\n      isSingle: !isMultiple.checked,\n      answersCount: Number(answersCount.value),\n      answerDescription: answerDescription.value\n    };\n    this.answersCount=[];\n    for(let i = 0; i < this.newQuestion.answersCount; i++){\n      this.answersCount.push(i);\n    }\n    this.showFillQuestion = true;\n  }\n\n  onSubmit(){\n    let question = new Question();\n    question.Content = this.newQuestion.content;\n    question.IsSingle = this.newQuestion.isSingle;\n    question.AnswerDescription = this.newQuestion.answerDescription;\n    question.TestId = Number(this.testId);\n\n    let answers = [];\n    for(let i = 0; i < this.newQuestion.answersCount; i++){\n      let isCorrect = document.getElementById(`a_isCorrect_${i}`) as unknown as HTMLInputElement;\n      let content = document.getElementById(`a_content_${i}`) as unknown as HTMLInputElement;\n      let mark =  document.getElementById(`a_mark_${i}`) as unknown as HTMLInputElement;\n      \n      let answer = new Answer();\n      answer.IsCorrect = isCorrect.checked;\n      answer.Content = content.value;\n      answer.Mark = Number(mark.value);\n      answers.push(answer);\n    }\n\n    this.questionService.createQuestionForOldTest(question).pipe(\n      concatMap(data=> {\n          console.log(`question ${question.Content} done`);\n          return from(answers).pipe(\n              concatMap(answer => this.answerService.createAnswerForNewQuestion(answer).pipe(\n                  tap(data => console.log(`answer ${answer} done` ) ),\n              )),\n              finalize(() => {\n                console.log(\"final\");\n              }),\n          );\n      })\n    ).subscribe(data => { \n      this.showAddQuestion = false;\n      this.showFillQuestion = false;\n      this.loadTestInfoGet();\n      this.toastr.success(\"Вопрос был добавлен.\",\"Успешно.\");\n     });\n  }\n\n  saveTest() {\n    console.log(this.test.maxTime);\n    let title = document.getElementById('title') as HTMLInputElement;\n    let description = document.getElementById('description') as HTMLInputElement;\n    let maxTime = document.getElementById('maxTime') as HTMLInputElement;\n    let testTime = new Date();\n    if(maxTime.value != \"\"){\n      let Time = maxTime.value.split(\":\");\n      testTime.setMinutes(Number(Time[0]));\n      testTime.setSeconds(Number(Time[1]));\n      testTime.setMilliseconds(0); \n      this.test.maxTime = testTime;\n    }\n    this.test.title = title.value == \"\" ? this.test.title : title.value;\n    this.test.description = description.value == \"\" ? this.test.description : description.value;\n    console.log(this.test.maxTime);\n    this.testService.putTest(this.test).subscribe(data => {\n        this.toastr.success(\"Тест был изменен.\", \"Успешно.\");\n        this.testService.testModel.reset();\n        this.loadTest(false);\n    });\n  }\n\n  editQuestion(questionId){\n    let question = new Question();\n    let content = document.getElementById(`q_content_${questionId}`) as HTMLInputElement;\n    let isSingle = document.getElementById(`q_isSingle_${questionId}`) as HTMLInputElement;\n    let answerDescription = document.getElementById(`q_ansDesc_${questionId}`) as HTMLInputElement;\n    question.QuestionId = questionId;\n    question.Content = content.value;\n    question.AnswerDescription = answerDescription.value;\n    question.TestId = Number(this.testId);\n    question.IsSingle = isSingle.value==\"true\" ? true : false;\n    console.log(question);\n    this.questionService.editQuestion(question).subscribe(data => { \n      this.answerService.getAnswersByQuestionId(questionId).subscribe((data: Answer[]) => {\n        let answers = data;\n        answers.forEach(el => {\n          let answer = new Answer();\n          let content = document.getElementById(`a_content_${el[\"answerId\"]}`) as HTMLInputElement;\n          let isCorrect = document.getElementById(`a_isCorrect_${el[\"answerId\"]}`) as HTMLInputElement;\n          let mark = document.getElementById(`a_mark_${el[\"answerId\"]}`) as HTMLInputElement;\n          answer.QuestionId = questionId;\n          answer.AnswerId = el[\"answerId\"];\n          answer.Content = content.value;\n          answer.IsCorrect = isCorrect.checked;\n          answer.Mark = Number(mark.value);\n          this.answerService.editAnswer(answer).subscribe(data => { \n            this.loadTest(false);\n          });\n        })\n        this.toastr.success(\"Данные по вопросу были изменены.\",\"Успешно.\");\n      });\n    });\n  }\n\n  addAnswer(questionId){\n    this.questIdForNewAns = questionId == this.questIdForNewAns ? null : questionId;\n  }\n\n  saveNewAnswer(){\n    let answer = new Answer();\n    let content = document.getElementById('a_content_new') as HTMLInputElement;\n    let mark = document.getElementById('a_mark_new') as HTMLInputElement;\n    let isCorrect = document.getElementById('a_isCorrect_new') as HTMLInputElement;\n    answer.Content = content.value;\n    answer.IsCorrect = isCorrect != null ? isCorrect.checked : false;\n    answer.Mark = mark != null ? Number(mark.value) : 0;\n    answer.QuestionId = Number(this.questIdForNewAns);\n    this.answerService.createAnswerForOldQuestion(answer).subscribe(data => { \n      this.questIdForNewAns = null;\n      this.loadTestInfoGet();\n    });\n  }\n}\n","<div *ngIf=\"loaded\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-12 col-md-8 col-lg-6 pb-5\">\n                <h2 class=\"text-center\">Изменение данных о тесте</h2>\n                <form [formGroup]=\"testService.testModel\" autocomplete=\"off\">\n                    <div class=\"form-group\">\n                        <div class=\"input-group mb-2\">\n                            <input type=\"text\" formControlName=\"Title\" class=\"form-control\" id=\"title\" placeholder=\"Название\"><br>\n                        </div> \n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"input-group mb-2\">\n                            <input type=\"text\" formControlName=\"Description\" class=\"form-control\" id=\"description\" placeholder=\"Описание\"><br>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"input-group mb-2\">\n                            <input type=\"text\" formControlName=\"Time\" class=\"form-control\" id=\"maxTime\" placeholder=\"Время\"><br>\n                        </div>\n                        <p class=\"text-danger\" *ngIf=\"testService.testModel.get('Time').touched && testService.testModel.get('Time').errors?.pattern\">\n                            Время введено неверно.\n                        </p>\n                    </div>\n                </form>\n                <div class=\"form-group text-center\">\n                    <input type=\"button\" value=\"Сохранить\" (click)=\"saveTest()\" class=\"btn btn-success\" [disabled]=\"testService.testModel.get('Time').errors?.pattern\"/>\n                </div>\n            </div>\n        </div>\n        <h1 class=\"text-center\">Тест</h1>\n        <table class=\"table mtable\">\n            <thead>\n                <tr>\n                    <td>Тест</td>\n                    <td>Описание</td>\n                    <td>Бал</td>\n                    <td>Количество вопросов</td>\n                    <td>Пройдено раз</td>\n                    <td>Время</td>\n                </tr> \n            </thead>\n            <tbody>\n                <tr>\n                    <td>{{test?.title}}</td>\n                    <td>{{test?.description}}</td>\n                    <td>{{test?.maxScore}}</td>\n                    <td>{{test?.questionsCount}}</td>\n                    <td>{{test?.passedTimes}}</td>\n                    <td>{{test?.maxTime.substring(14)}}</td>\n                </tr>\n            </tbody>\n        </table>\n        <div *ngIf=\"!showAddQuestion\">\n            <button class=\"btn btn-primary\" (click)=\"addQuestion()\">Добавить вопрос</button>\n        </div>\n        <br>\n        <div *ngIf=\"showAddQuestion\">\n            <div class=\"row\">\n                <span>Несколько правильных ответов?</span><input class=\"m-2\" type=\"checkbox\" id=\"isMultiple\"/>\n                <input type=\"text\" class=\"mx-3\" style=\"width: 300px;\" id=\"content\" placeholder=\"Текст вопроса\">\n                <input type=\"text\" class=\"mx-3\" style=\"width: 300px;\" id=\"ansDesc\" placeholder=\"Объяснение ответа\">\n                <label>Количество ответов:</label><input type=\"text\" class=\"ml-2\" style=\"width: 45px;\" id=\"answersCount\">\n            </div>\n            <div class=\"form-group text-center\">\n                <input type=\"button\" value=\"Далее\" (click)=\"next()\" class=\"btn btn-success m-3\"/>\n            </div>\n            <div *ngIf=\"showFillQuestion\">\n                <p><b>{{newQuestion.content}}</b></p>\n                <p><b>{{newQuestion.answerDescription}}</b></p>\n                <div class=\"col-12\" *ngFor=\"let s of answersCount; let i = index;\">\n                    <div class=\"row\">\n                        <div class=\"col-2\">\n                            <div class=\"row\">\n                                <div class=\"col-8\">\n                                    <p>Правильный?</p>\n                                </div>\n                                <div class=\"col-1\">\n                                    <div *ngIf=\"newQuestion.isSingle; else isMultiple\">\n                                        <input type=\"radio\" id=\"a_isCorrect_{{i}}\" name=\"a_isCorrect\"/>\n                                    </div>\n                                    <ng-template #isMultiple>\n                                        <input type=\"checkbox\" id=\"a_isCorrect_{{i}}\" name=\"a_isCorrect\"/>\n                                    </ng-template>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-6\">\n                            <div class=\"row\">\n                                <div class=\"col-9\">\n                                    <input type=\"text\" style=\"width: 100%;\" placeholder=\"Контент\" id=\"a_content_{{i}}\" name=\"a_content\"/> \n                                </div>\n                                <div class=\"col-2\">\n                                    <input type=\"text\" style=\"width:100%\" placeholder=\"Бал\" id=\"a_mark_{{i}}\" name=\"a_mark\"/>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button class=\"btn btn-success\" style=\"margin-bottom: 20px; margin-left: 10px;\" type=\"submit\" (click)=\"onSubmit()\">Создать</button>\n            </div>\n        </div>\n        <div *ngIf=\"!showAddQuestion\"> \n            <div *ngFor=\"let item of testInfo | keyvalue; let i = index\">\n                <form name=\"form_{{i}}\">\n                    <b>{{i+1}}. Контент: </b>\n                    <input type=\"radio\" id=\"q_isSingle_{{item.key.questionId}}\" value=\"{{item.key.isSingle}}\" style=\"display: none\">\n                    <input type='text' style=\"width: 700px;\" id=\"q_content_{{item.key.questionId}}\" value=\"{{item.key.content}}\">\n                    <br>\n                    <b class=\"pl-3\">Объяснение ответа: </b>\n                    <input type='text' style=\"width: 614px;\" id=\"q_ansDesc_{{item.key.questionId}}\" value=\"{{item.key.answerDescription}}\">\n                    <div class=\"text-center my-2\">\n                        <button (click)=\"editQuestion(item.key.questionId)\" class=\"btn btn-sm btn-primary mx-3\">Сохранить</button>\n                        <button (click)=\"addAnswer(item.key.questionId)\" class=\"btn btn-sm btn-primary mr-3\">Добавить ответ</button>\n                        <button (click)=\"deleteQuestion(item.key.questionId)\" class=\"btn btn-sm btn-danger\">Удалить</button>\n                    </div>\n                    <div class=\"col-12\" *ngFor=\"let s of item.value\">\n                        <div class=\"row\">\n                            <div class=\"col-3 pr-0\" style=\"max-width: 13%!important;\">\n                                <div class=\"row\">\n                                    <div class=\"col-8\">\n                                        <p>Правильный?</p>\n                                    </div>\n                                    <div class=\"col-2\">\n                                        <div *ngIf=\"item.key.isSingle; else isMultiple\">\n                                            <div *ngIf=\"s.isCorrect\">\n                                                <input type=\"radio\" id=\"a_isCorrect_{{s.answerId}}\" name=\"answer\" value=\"{{s.isCorrect}}\" checked/>\n                                            </div>\n                                            <div *ngIf=\"!s.isCorrect\">\n                                                <input type=\"radio\" id=\"a_isCorrect_{{s.answerId}}\" name=\"answer\" value=\"{{s.isCorrect}}\"/>\n                                            </div>\n                                        </div>\n                                        <ng-template #isMultiple>\n\n                                            <div *ngIf=\"s.isCorrect\">\n                                                <input type=\"checkbox\" id=\"a_isCorrect_{{s.answerId}}\" name=\"answer\" value=\"{{s.isCorrect}}\" checked/>\n                                            </div>\n                                            <div *ngIf=\"!s.isCorrect\">\n                                                <input type=\"checkbox\" id=\"a_isCorrect_{{s.answerId}}\" name=\"answer\" value=\"{{s.isCorrect}}\"/>\n                                            </div>\n                                        </ng-template>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-9\">\n                                Контент:<input type='text' id=\"a_content_{{s.answerId}}\" style=\"width: 400px;\" class=\"mx-2\" value='{{s.content}}'>\n                                Бал: <input type='text' id=\"a_mark_{{s.answerId}}\" value=\"{{s.mark}}\" style=\"width: 45px;\">\n                                <button (click)=\"deleteAnswer(s.answerId)\" class=\"btn btn-sm btn-danger mx-3\">Удалить</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"questIdForNewAns == item.key.questionId\">\n                        <div class=\"col-12\">\n                            <p>Новый ответ:</p>\n                            <div class=\"row\">\n                                <div *ngIf=\"!item.key.isSingle\">\n                                    <p class=\"ml-3 my-0\">Правильный?:<input class=\"mx-1\" type=\"checkbox\" id=\"a_isCorrect_new\"/></p>\n                                </div>\n                                <p class=\"ml-3 mr-2 py-0 my-0\">Контент:</p>\n                                <input class=\"mr-3\" style=\"width: 300px;\" type='text' id=\"a_content_new\" >\n                                <div *ngIf=\"!item.key.isSingle\">\n                                    <p class=\"my-0\">Бал:\n                                    <input type='text' style=\"width: 45px;\" id=\"a_mark_new\"></p>\n                                </div>\n                                <button (click)=\"saveNewAnswer()\" class=\"btn btn-sm btn-primary mx-2\">Создать</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n                <br/><br/><br/>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Test } from 'src/app/models/test';\nimport { TestService } from 'src/app/services/test.service';\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'test-form',\n  templateUrl: './test-form.component.html',\n  styles: []\n})\nexport class TestFormComponent implements OnInit {\n\n  @Input() test: Test;\n  \n  constructor(public testService: TestService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form [formGroup]=\"testService.testModel\" autocomplete=\"off\">\n    <div class=\"form-group\">\n        <div class=\"input-group mb-2\">\n            <!-- <div class=\"input-group-prepend\">\n            </div> -->\n            <input type=\"text\" formControlName=\"Title\" class=\"form-control\" [(ngModel)]=\"test.title\" placeholder=\"Название\"><br>\n        </div> \n        <p class=\"text-danger\" *ngIf=\"testService.testModel.get('Title').touched && testService.testModel.get('Title').errors?.required\">\n            Это поле обязательно.\n        </p>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"input-group mb-2\">\n            <!-- <div class=\"input-group-prepend\">\n            </div> -->\n            <input type=\"text\" formControlName=\"Description\" class=\"form-control\" [(ngModel)]=\"test.description\" placeholder=\"Описание\"><br>\n        </div>\n        <p class=\"text-danger\" *ngIf=\"testService.testModel.get('Description').touched && testService.testModel.get('Description').errors?.required\">\n            Это поле обязательно.\n        </p>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"input-group mb-2\">\n            <!-- <div class=\"input-group-prepend\">\n            </div> -->\n            <input type=\"text\" formControlName=\"QuestionsCount\" class=\"form-control\" [(ngModel)]=\"test.maxScore\" placeholder=\"Количество вопросов\"><br>\n        </div>\n        <p class=\"text-danger\" *ngIf=\"testService.testModel.get('QuestionsCount').touched && testService.testModel.get('QuestionsCount').errors?.questionCountRange\">\n            Количество вопросов введено неверно.\n        </p>\n        <p class=\"text-danger\" *ngIf=\"testService.testModel.get('QuestionsCount').touched && testService.testModel.get('QuestionsCount').errors?.required\">\n            Это поле обязательно.\n        </p>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"input-group mb-2\">\n            <!-- <div class=\"input-group-prepend\">\n            </div> -->\n            <input type=\"text\" formControlName=\"Time\" class=\"form-control\" [(ngModel)]=\"test.maxTime\" placeholder=\"Время\"><br>\n        </div>\n        <p class=\"text-danger\" *ngIf=\"testService.testModel.get('Time').touched && testService.testModel.get('Time').errors?.pattern\">\n            Время введено неверно.\n        </p>\n        <p class=\"text-danger\" *ngIf=\"testService.testModel.get('Time').touched && testService.testModel.get('Time').errors?.required\">\n            Это поле обязательно.\n        </p>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TestService } from 'src/app/services/test.service';\nimport { Test } from 'src/app/models/test';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-test-list',\n  templateUrl: './test-list.component.html',\n  styles: [\n  ]\n})\nexport class TestListComponent implements OnInit {\n\n  previousTests: Test[];\n  pageNumber: number = 1;\n  tests: Test[];\n  constructor(private testService: TestService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.loadTests();\n  }\n\n  loadTests() {\n    this.testService.getTestsForPagination(this.pageNumber).subscribe((data: Test[]) => {\n      this.tests = data;\n      if(data.length != 0 ){\n        this.previousTests = data;\n      }\n      else{\n        this.tests = this.previousTests;\n        this.pageNumber--;\n      }\n    })\n  }\n\n  nextPage(){\n    this.pageNumber++;\n    this.loadTests();\n  }\n\n  previousPage(){\n    if(this.pageNumber > 1){\n      this.pageNumber--;\n    }\n    this.loadTests();\n  }\n\n  delete(id: string) {\n    var result = confirm(\"Вы уверены что хотите удалить этот тест?\");\n    if(result == true){\n      this.testService.deleteTest(id).subscribe(data => { \n        this.pageNumber--;\n        this.loadTests(); \n        this.toastr.success('Тест был удален.','Успешно.');\n      }),\n      err => {\n        this.toastr.success('Тест не был удален. Что-то пошло не так.','Безуспешно.');\n        console.log(err);\n      };\n    }\n  } \n}\n","<div class=\"col-lg-6 floating\" class=\"container\">\n    <div class=\"text-center\">\n        <button routerLink= \"/admin-panel/test-create\" class=\"btn btn-sm btn-primary\">Создать тест</button>\n    </div>\n    <h1 style=\"text-align: center\">Список тестов</h1>\n    <div class=\"text-center\">\n        <button class=\"btn btn-sm btn-info mx-3\" (click)=\"previousPage()\"><</button>\n        <button class=\"btn btn-sm btn-info\" (click)=\"nextPage()\">></button>\n    </div>\n    <table class=\"table mtable\">\n        <thead>\n            <tr>\n                <td>Тест</td>\n                <td>Описание</td>\n                <td>Количество вопросов</td>\n                <td>Бал</td>\n                <td>Пройдено раз</td>\n                <td>Время</td> \n                <td>Операции</td>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let t of tests\">\n                <td>{{t?.title}}</td>\n                <td>{{t?.description}}</td>\n                <td>{{t?.questionsCount}}</td>\n                <td>{{t?.maxScore}}</td>\n                <td>{{t?.passedTimes}}</td>\n                <td>{{t?.maxTime.substring(14)}}</td>\n                <td>\n                    <a routerLink=\"/admin-panel/test-edit/{{t.testId}}\" class=\"btn btn-sm btn-primary\" style=\"margin-right: 5px;\">Изменить</a>\n                    <button (click)=\"delete(t.testId)\" class=\"btn btn-sm btn-danger\">Удалить</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TestResult } from 'src/app/models/testResult';\nimport { UserTestService } from 'src/app/services/usertest.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-user-test-create',\n  templateUrl: './user-test-create.component.html',\n  styles: []\n})\nexport class UserTestCreateComponent implements OnInit {\n\n  userTest;\n  \n  constructor(private toastr: ToastrService, public userTestService: UserTestService,\n              private router: Router, activeRoute: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.userTestService.userTestModel.reset();\n    this.userTest = new TestResult();\n  }\n\n  create(){\n    let testResult = new TestResult();\n\n    let time = new Date();\n    let userTestTime = this.userTest.Time.split(\":\");\n    time.setMinutes(userTestTime[0]);\n    time.setSeconds(userTestTime[1]);\n    time.setMilliseconds(0);\n\n    var username = document.getElementById(\"Username\") as HTMLInputElement;\n    var testTitle = document.getElementById(\"TestTitle\") as HTMLInputElement;\n\n    testResult.Username = username.value;\n    testResult.TestTitle = testTitle.value;\n    testResult.Mark = Number(this.userTest.Mark);\n    testResult.Time = time;\n    this.userTestService.postTestResultByAdmin(testResult)\n      .subscribe(data => { \n        this.userTestService.userTestModel.reset();\n        this.toastr.success(\"Результат теста был создан.\", \"Успешно.\");\n        this.router.navigateByUrl(\"/admin-panel\")\n      },\n      err => {\n        if(err.error == \"User was not found\"){\n          this.toastr.error(\"Пользователь с таким именем не был найден.\", \"Результат теста не был создан.\")\n        }\n        else if(err.error == \"Test was not found\"){\n          this.toastr.error(\"Тест с таким названием не был найден.\", \"Результат теста не был создан.\")\n        }\n        else if(err.error == \"Test result`s time can not be higher than test`s maximum time\"){\n          this.toastr.error(\"Время прохождения теста не может быть больше чем максимально допустимое время теста.\", \"Результат теста не был создан.\")\n        }\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-12 col-md-8 col-lg-6 pb-5\">\n            <h2 class=\"text-center\">Создание результата теста</h2>\n            <user-test-form-ut [(userTest)]=\"userTest\"></user-test-form-ut>\n            <user-test-form-mt [(userTest)]=\"userTest\"></user-test-form-mt>\n            <div class=\"form-group text-center\">\n                <input type=\"button\" value=\"Создать\" (click)=\"create()\" class=\"btn btn-success\" [disabled]=\"!userTestService.userTestModel.valid\"/>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { TestResult } from 'src/app/models/testResult';\nimport { UserTestService } from 'src/app/services/usertest.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserTestFormMTComponent } from '../user-test-form-mt/user-test-form-mt.component';\n\n@Component({\n  selector: 'app-user-test-edit',\n  templateUrl: './user-test-edit.component.html',\n  styleUrls: []\n})\nexport class UserTestEditComponent implements OnInit {\n\n  loaded: boolean;\n  id;\n  userTest;\n  userTestTime;\n  userTestMark;\n  constructor(public userTestService: UserTestService, activeRoute: ActivatedRoute, private toastr: ToastrService) {\n    this.id = activeRoute.snapshot.params[\"id\"];\n  }\n\n  ngOnInit() {\n    if (this.id){\n        this.loadUserTest();\n    }\n  }\n\n  save() {\n    if(this.userTest.Time != null || this.userTest.Mark != null){\n      let testResult = new TestResult();\n      let time = new Date();\n      if(this.userTest.Time != null){\n        let userTestTime = this.userTest.Time.split(\":\");\n        time.setMinutes(userTestTime[0]);\n        time.setSeconds(userTestTime[1]);\n        time.setMilliseconds(0);\n        testResult.Time = time;\n      }\n      else{\n        testResult.Time = this.userTestTime;\n      }\n      if(this.userTest.Mark != null){\n        testResult.Mark = Number(this.userTest.Mark);\n      }\n      else{\n        testResult.Mark = this.userTestMark;\n      }\n      testResult.UserTestId = this.userTest.userTestId;\n      testResult.UserId = this.userTest.userId;\n      testResult.TestId = this.userTest.testId;\n      this.userTestService.putUserTest(testResult).subscribe(data => {\n        this.userTestService.userTestModel.reset();\n        this.toastr.success(\"Данные о результате теста были изменены.\",\"Успешно.\");\n        this.loadUserTest();\n      },\n      err => {\n        if(err.error == \"Test result`s time can not be higher than test`s maximum time\"){\n          this.toastr.error(\"Время прохождения теста не может быть больше чем максимально допустимое время теста.\", \"Результат теста не был создан.\")\n        }\n      });\n    }\n    else{ \n      this.toastr.error(\"Введите данные для результата теста.\", \"Безуспешно.\");\n    }\n  }\n\n  loadUserTest(){\n    this.userTestService.getUserTestById(this.id)\n      .subscribe((data: object) =>{\n        this.userTestTime = data[\"time\"];\n        this.userTestMark = data[\"mark\"];\n        this.userTest = data;\n        this.loaded = true;\n      })\n  }\n}\n","<div *ngIf=\"loaded\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-12 col-md-8 col-lg-6 pb-5\">\n                <h2 class=\"text-center\">Изменение данных о результате теста пользователе</h2>\n                <user-test-form-mt [(userTest)]=\"userTest\"></user-test-form-mt>\n                <div class=\"form-group text-center\">\n                    <input type=\"button\" value=\"Сохранить\" (click)=\"save()\" class=\"btn btn-success\"/>\n                </div>\n            </div>\n        </div>\n        <table class=\"table mtable\">\n            <thead>\n                <tr>\n                    <td>Пользователь</td>\n                    <td>Тест</td>\n                    <td>Результат</td>\n                    <td>Время</td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>{{userTest?.username}}</td>\n                    <td>{{userTest?.test}}</td>\n                    <td>{{userTest?.mark}}%</td>\n                    <td>{{userTest?.time.substring(14)}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TestResult } from 'src/app/models/testResult';\nimport { UserTestService } from 'src/app/services/usertest.service';\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'user-test-form-mt',\n  templateUrl: './user-test-form-mt.component.html',\n  styles: [\n  ]\n})\nexport class UserTestFormMTComponent implements OnInit {\n\n  @Input() userTest: TestResult;\n\n  constructor(public userTestService: UserTestService) { }\n\n  ngOnInit(): void {\n  }\n}\n","<form [formGroup]=\"userTestService.userTestModel\" autocomplete=\"off\">\n    <div class=\"form-group\">\n        <div class=\"input-group mb-2\">\n            <input type=\"text\" formControlName=\"Mark\" class=\"form-control\" [(ngModel)]=\"userTest.Mark\" placeholder=\"Результат\">\n            <label class=\"text-danger\" *ngIf=\"userTestService.userTestModel.get('Mark').touched && userTestService.userTestModel.get('Mark').errors?.markRange\">\n                Бал введен неверно.\n            </label>\n            <label class=\"text-danger\" *ngIf=\"userTestService.userTestModel.get('Mark').touched && userTestService.userTestModel.get('Mark').errors?.required\">\n                Это поле обязательное.\n            </label>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"input-group mb-2\">\n            <input type=\"text\" formControlName=\"Time\" class=\"form-control\" [(ngModel)]=\"userTest.Time\" placeholder=\"Время - 03:00\">\n            <label class=\"text-danger\" *ngIf=\"userTestService.userTestModel.get('Time').touched && userTestService.userTestModel.get('Time').errors?.pattern\">\n                Время введено неверно.\n            </label>\n            <label class=\"text-danger\" *ngIf=\"userTestService.userTestModel.get('Time').touched && userTestService.userTestModel.get('Time').errors?.required\">\n                Это поле обязательное.\n            </label>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { TestResult } from 'src/app/models/testResult';\nimport { UserTestService } from 'src/app/services/usertest.service';\n\n@Component({\n  selector: 'user-test-form-ut',\n  templateUrl: './user-test-form-ut.component.html',\n  styles: [\n  ]\n})\nexport class UserTestFormUTComponent implements OnInit {\n\n  @Input() userTest: TestResult;\n  \n  constructor(public userTestService: UserTestService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form [formGroup]=\"userTestService.userTestModel\" autocomplete=\"off\">\n    <div class=\"form-group\">\n        <div class=\"input-group mb-2\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"Username\" id=\"Username\" placeholder=\"Имя пользователя\">\n            <label class=\"text-danger\" *ngIf=\"userTestService.userTestModel.get('Username').touched && userTestService.userTestModel.get('Username').errors?.required\">\n                Это поле обязательное.\n            </label>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"input-group mb-2\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"TestTitle\" id=\"TestTitle\" placeholder=\"Название теста\">\n            <label class=\"text-danger\" *ngIf=\"userTestService.userTestModel.get('TestTitle').touched && userTestService.userTestModel.get('TestTitle').errors?.required\">\n                Это поле обязательное.\n            </label>\n        </div>\n    </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserTestService } from 'src/app/services/usertest.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-user-test-list',\n  templateUrl: './user-test-list.component.html',\n  styles: []\n})\n\nexport class UserTestListComponent implements OnInit {\n\n  previousUserTests: object[];\n  userTests: object[];\n  pageNumber: number = 1;\n  constructor(private router: Router, private toastr: ToastrService, private userTestService: UserTestService) { }\n\n  ngOnInit() {\n    this.loadUserTests();\n  }\n\n  loadUserTests(){\n    this.userTestService.getUserTestsForPagination(this.pageNumber).subscribe((data: object[]) => {\n      this.userTests = data;\n      if(data.length != 0 ){\n        this.previousUserTests = data;\n      }\n      else{\n        this.userTests = this.previousUserTests;\n        this.pageNumber--;\n      }\n    })\n  } \n\n  nextPage(){\n    this.pageNumber++;\n    this.loadUserTests();\n  }\n\n  previousPage(){\n    if(this.pageNumber > 1){\n      this.pageNumber--;\n    }\n    this.loadUserTests();\n  }\n\n  deleteUserTest(id: string) {\n    var result = confirm(\"Вы уверены что хотите удалить этот результат?\");\n    if(result == true){\n      this.userTestService.deleteUserTest(id).subscribe(data => this.loadUserTests());\n      this.toastr.success(\"Результат прохождения теста был удален.\", \"Успешно.\")\n    }\n  } \n}\n","<div class=\"container\">\n    <div class=\"text-center\">\n        <button routerLink= \"/admin-panel/user-test-create\" class=\"btn btn-sm btn-primary\">Добавить результат</button>\n    </div>\n    <h1 style=\"text-align: center\">Список результатов пользователей</h1>\n    <div class=\"text-center\">\n        <button class=\"btn btn-sm btn-info mx-3\" (click)=\"previousPage()\"><</button>\n        <button class=\"btn btn-sm btn-info\" (click)=\"nextPage()\">></button>\n    </div>\n    <table class=\"table mtable\"> \n        <thead>\n            <tr>\n                <td>Пользователь</td>\n                <td>Тест</td>\n                <td>Результат</td>\n                <td>Время</td>\n                <td>Операции</td>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let u of userTests\">\n                <td>{{u?.username}}</td>\n                <td>{{u?.test}}</td>\n                <td>{{u?.mark}}%</td>\n                <td>{{u?.time.substring(14)}}</td>\n                <td>\n                    <a routerLink=\"/admin-panel/user-test-edit/{{u.userTestId}}\" class=\"btn btn-sm btn-primary\" style=\"margin-right: 5px;\">Изменить</a>\n                    <button (click)=\"deleteUserTest(u.userTestId)\" class=\"btn btn-sm btn-danger\">Удалить</button>\n                </td>\n            </tr>\n        </tbody>\n    </table> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserTestService } from 'src/app/services/usertest.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styles: []\n})\nexport class UserEditComponent implements OnInit {\n\n  id: string;\n  user: User;\n  loaded: boolean = false;\n  userTests;\n\n  constructor(public userService: UserService,\n              private userTestService: UserTestService, private router: Router, \n              private toastr: ToastrService, activeRoute: ActivatedRoute) { \n      this.id = activeRoute.snapshot.params[\"id\"];\n  }\n  \n  ngOnInit() {\n    if (this.id){\n        this.userService.getUser(this.id)\n            .subscribe((data: User) => {\n                this.user = data;\n                if (this.user != null) {\n                    this.loaded = true;\n                }\n            });\n        this.loadUserTests();\n    }\n  }\n\n  onSubmit() {\n    var img = document.createElement(\"img\");\n    img.src = this.user.ProfileImageUrl;\n    img.onerror = () => {\n      if(!this.user.ProfileImageUrl){\n        this.saveUser();\n      }\n      else{\n        this.toastr.error(\"Ссылка на картинку недействительна.\", \"Безуспешно.\");;\n      }\n    }\n    img.onload = () => {\n      this.saveUser();\n    }\n  }\n\n  saveUser(){\n    if(this.user.Email != null || this.user.UserName != null || this.user.AboutMe != null || this.user.ProfileImageUrl != null){\n      this.userService.putUser(this.user)\n        .subscribe(data => { \n          this.userService.emailModel.reset();\n          (document.getElementById('Username') as HTMLInputElement).value = \"\";\n          (document.getElementById('AboutMe') as HTMLInputElement).value = \"\";\n          (document.getElementById('ProfileImageUrl') as HTMLInputElement).value = \"\";\n          this.toastr.success(\"Данные о пользователе были изменены.\", \"Успешно.\")\n        });\n    }\n    else{\n      this.toastr.error(\"Введите новые данные пользователя\", \"Безуспешно.\")\n    }\n  }\n\n  loadUserTests(){\n    this.userTestService.getUserTestsByUserId(this.id)\n      .subscribe((data: object[]) =>{\n         this.userTests = data;\n      })\n  }\n\n  deleteTestResult(id: string) {\n    var result = confirm(\"Вы уверены что хотите удалить результат теста?\");\n    if(result == true){\n      this.userTestService.deleteUserTest(id).subscribe(data => this.loadUserTests());\n      this.toastr.success(\"Результат прохождения теста был удален.\", \"Успешно.\")\n    }\n  } \n\n  makeUserAdmin(){\n    this.user.Role = \"admin\";\n    this.userService.changeUserRole(this.user)\n      .subscribe((res: any) => {\n        if (res.succeeded) {\n          this.toastr.success('Пользователь назначен администратором.', 'Успешно.');\n        } \n        else {\n          res.errors.forEach(element => {\n            switch (element.code) {\n              case 'UserAlreadyInRole':\n                this.toastr.error('Пользователь уже был назначен администратором.','Безуспешно.');\n                break;\n              default:\n                this.toastr.error(element.description,'Безуспешно.');\n                break;\n            }\n          });\n        }\n      },\n      err => {\n        this.toastr.error('Что-то пошло не так.', 'Безуспешно.');\n      })\n  }\n\n  makeUserCustomer(){\n    this.user.Role = \"customer\";\n    this.userService.changeUserRole(this.user)\n      .subscribe((res: any) => {\n        if (res.succeeded) {\n          this.toastr.success('Пользователь назначен клиентом.', 'Успешно.');\n        } \n        else {\n          res.errors.forEach(element => {\n            switch (element.code) {\n              case 'UserAlreadyInRole':\n                this.toastr.error('Пользователь уже был назначен клиентом.','Безуспешно.');\n                break;\n              default:\n                this.toastr.error(element.description,'Безуспешно.');\n                break;\n            }\n          });\n        }\n      },\n      err => {\n        console.log(err);\n        this.toastr.error('Что-то пошло не так.', 'Безуспешно.');\n      })}\n}\n","<div *ngIf=\"loaded\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-12 col-md-8 col-lg-6 pb-5\">\n                <h2>Изменение данных о пользователе</h2>\n                <user-form [(user)]=\"user\"></user-form>\n                <div class=\"form-group text-center\" >\n                    <input type=\"button\" value=\"Сохранить\" (click)=\"onSubmit()\" [disabled]=\"!userService.emailModel.valid\" class=\"btn btn-success\" />\n                </div>\n            </div>\n        </div>\n        <div class=\"text-center\">\n            <input type=\"button\" value=\"Назначить администратором\" (click)=\"makeUserAdmin()\" class=\"btn btn-info mx-3\"/>\n            <input type=\"button\" value=\"Назначить клиентом\" (click)=\"makeUserCustomer()\" class=\"btn btn-info mx-3\"/> \n            <a routerLink=\"/account/{{id}}\" class=\"btn btn-info mx-3\">Личный кабинет</a>\n        </div>\n        <br><br>\n        <h1 class=\"text-center\">Пройденные тесты</h1>\n        <table class=\"table mtable\">\n            <thead>\n                <tr>\n                    <td>Тест</td>\n                    <td>Результат</td>\n                    <td>Время</td>\n                    <td>Операции</td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let u of userTests\">\n                    <td>{{u?.test}}</td>\n                    <td>{{u?.mark}}%</td>\n                    <td>{{u?.time.substring(14)}}</td>\n                    <td>\n                        <a routerLink=\"/admin-panel/user-test-edit/{{u.id}}\" class=\"btn btn-sm btn-primary\" style=\"margin-right: 5px;\">Изменить</a>\n                        <button (click)=\"deleteTestResult(u.id)\" class=\"btn btn-sm btn-danger\">Удалить</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UserEditComponent } from '../user-edit/user-edit.component';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'user-form',\n  templateUrl: './user-form.component.html',\n  styles: []\n})\nexport class UserFormComponent implements OnInit {\n\n  @Input() user: User;\n  \n  constructor(public userService: UserService, private fb: FormBuilder) { }\n\n  ngOnInit(): void{\n    this.userService.emailModel.reset(); \n  }\n}\n","<div class=\"form-group\">\n    <div class=\"input-group mb-2\">\n        <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\"><i class=\"fa fa-user text-info\"></i></div>\n        </div>\n        <input type=\"text\" class=\"form-control\" id=\"Username\" [(ngModel)]=\"user.UserName\" placeholder=\"Alex\">\n    </div>\n</div>\n<form [formGroup]=\"userService.emailModel\" autocomplete=\"off\">\n    <div class=\"form-group\">\n        <div class=\"input-group mb-2\">\n            <div class=\"input-group-prepend\">\n                <div class=\"input-group-text\"><i class=\"fa fa-envelope text-info\"></i></div>\n            </div>\n            <input type=\"email\" formControlName=\"UserEmail\" class=\"form-control\" [(ngModel)]=\"user.Email\" placeholder=\"Email@gmail.com\">\n            <label class=\"text-danger\" *ngIf=\"userService.emailModel.get('UserEmail').touched && userService.emailModel.get('UserEmail').errors?.email\">\n                Почта введена неверно.\n            </label>\n        </div>\n    </div>\n</form>\n<div class=\"form-group\">\n    <div class=\"input-group mb-2\">\n        <input type=\"text\" class=\"form-control\" id=\"ProfileImageUrl\" [(ngModel)]=\"user.AboutMe\" placeholder=\"О себе\">\n    </div>\n</div>\n<div class=\"form-group\">\n    <div class=\"input-group mb-2\">\n        <input type=\"text\" class=\"form-control\" id=\"AboutMe\" [(ngModel)]=\"user.ProfileImageUrl\" placeholder=\"Ссылка на аватар\">\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styles: []\n})\nexport class UserListComponent implements OnInit {\n\n  previousUsers: User[];\n  users: User[];\n  pageNumber: number = 1;\n  constructor(private toastr: ToastrService, private userService: UserService) { }\n \n  ngOnInit() {\n    this.loadUsers();\n  }\n\n  loadUsers(){\n    this.userService.getUsersForPagination(this.pageNumber).subscribe((data: User[]) => {\n      this.users = data;\n      if(data.length != 0 ){\n        this.previousUsers = data;\n      }\n      else{\n        this.users = this.previousUsers;\n        this.pageNumber--;\n      }\n    })\n  }\n\n  nextPage(){\n    this.pageNumber++;\n    this.loadUsers();\n  }\n\n  previousPage(){\n    if(this.pageNumber > 1){\n      this.pageNumber--;\n    }\n    this.loadUsers();\n  }\n\n  delete(id: string) {\n    var result = confirm(\"Вы уверены что хотите удалить этого пользователя?\");\n    if(result == true){\n      this.userService.deleteUser(id).subscribe(data => this.loadUsers());\n      this.toastr.success(\"Пользователь был удален.\", \"Успешно.\")\n    }\n  } \n}\n","<div class=\"container\">\n    <h1 style=\"text-align: center\">Список пользователей</h1>\n    <div class=\"text-center\">\n        <button class=\"btn btn-sm btn-info mx-3\" (click)=\"previousPage()\"><</button>\n        <button class=\"btn btn-sm btn-info\" (click)=\"nextPage()\">></button>\n    </div>\n    <table class=\"table mtable\">\n        <thead>\n            <tr>\n                <td>Почта</td>\n                <td>Имя пользователя</td>\n                <td>Операции</td>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let u of users\">\n                <td>{{u?.email}}</td>\n                <td>{{u?.username}}</td>\n                <td>\n                    <a routerLink=\"/admin-panel/user-edit/{{u.id}}\" class=\"btn btn-sm btn-primary\" style=\"margin-right: 5px;\">Изменить</a>\n                    <button (click)=\"delete(u.id)\" class=\"btn btn-sm btn-danger\">Удалить</button>\n                </td>\n            </tr>\n        </tbody>\n    </table> \n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { TestStartComponent } from './test-start/test-start.component';\nimport { ExitTestStartGuard } from './test-start/exit.test-start.guard';\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\nimport { AdminPanelComponent } from './admin-panel/admin-panel.component';\nimport { UserEditComponent } from './admin-panel/user/user-edit/user-edit.component';\nimport { UserListComponent } from './admin-panel/user/user-list/user-list.component';\nimport { AccountComponent } from './account/account.component';\nimport { TestInfoComponent } from './test-info/test-info.component';\nimport { TestListComponent } from './admin-panel/test/test-list/test-list.component';\nimport { TestEditComponent } from './admin-panel/test/test-edit/test-edit.component';\nimport { TestCreateComponent } from './admin-panel/test/test-create/test-create.component';\nimport { UserTestListComponent } from './admin-panel/user-test/user-test-list/user-test-list.component';\nimport { UserTestEditComponent } from './admin-panel/user-test/user-test-edit/user-test-edit.component';\nimport { UserTestCreateComponent } from './admin-panel/user-test/user-test-create/user-test-create.component';\nimport { ConfirmEmailComponent } from './user/confirm-email/confirm-email.component';\nimport { ForgotPasswordComponent } from './user/forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './user/reset-password/reset-password.component';\nimport { ExternalLoginComponent } from './user/external-login/external-login.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo:'/home', pathMatch:'full' },\n  {\n    path: 'user', component: UserComponent,\n    children: [\n      { path: 'registration', component: RegistrationComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'confirm-email', component: ConfirmEmailComponent },\n      { path: 'forgot-password', component: ForgotPasswordComponent },\n      { path: 'reset-password', component: ResetPasswordComponent },\n      { path: 'external-login', component: ExternalLoginComponent }\n    ]\n  },\n  { path: 'home', component: HomeComponent },\n  { path: 'forbidden', component: ForbiddenComponent, canActivate: [AuthGuard]},\n  { \n    path: 'admin-panel', component: AdminPanelComponent, canActivate: [AuthGuard], data: { permittedRoles: ['admin'] },\n    children: [\n      { path: 'user-edit/:id', component: UserEditComponent },\n      { path: 'user-list', component: UserListComponent },\n      { path: 'test-list', component: TestListComponent },\n      { path: 'test-edit/:id', component: TestEditComponent },\n      { path: 'test-create', component: TestCreateComponent },\n      { path: 'user-test-list', component: UserTestListComponent },\n      { path: 'user-test-edit/:id', component: UserTestEditComponent },\n      { path: 'user-test-create', component: UserTestCreateComponent }\n    ]\n  },\n  { path: 'account', component: AccountComponent, canActivate: [AuthGuard], },\n  { path: 'account/:id', component: AccountComponent },\n  { path: 'teststart/:id', component: TestStartComponent, canActivate: [AuthGuard], canDeactivate: [ExitTestStartGuard] },\n  { path: 'test/:id', component: TestInfoComponent },\n  { path: '**', redirectTo: '/' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: []\n})\n\nexport class AppComponent implements OnInit {\n  title = 'Knowledge Testing System';\n\n  constructor(private spinner: NgxSpinnerService, private router: Router) {}\n \n  ngOnInit() {\n    /** spinner starts on init */\n    this.spinner.show();\n \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.spinner.hide();\n    }, 500);\n  }\n\n  onLogout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/user/login']);\n  }\n}\n","<nav class=\"navbar navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand text-white\" routerLink=\"/home\">Knowledge Testing System</a>\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/admin-panel\">Admin Panel</a>\r\n      </li>\r\n    </ul>\r\n    <button class=\"btn btn-info place\" routerLink=\"/account\">Личный кабинет</button>\r\n    <button class=\"btn btn-danger my-2 my-sm-0\" (click)=\"onLogout()\">Выход</button>\r\n  </nav>\r\n<ngx-spinner></ngx-spinner>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { TestStartComponent } from './test-start/test-start.component';\nimport { ExitTestStartGuard } from './test-start/exit.test-start.guard';\nimport { AdminPanelComponent } from './admin-panel/admin-panel.component';\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\nimport { UserFormComponent } from './admin-panel/user/user-form/user-form.component';\nimport { UserListComponent } from './admin-panel/user/user-list/user-list.component';\nimport { UserEditComponent } from './admin-panel/user/user-edit/user-edit.component';\nimport { AccountComponent } from './account/account.component';\nimport { TestService } from './services/test.service';\nimport { AuthService } from './services/auth.service';\nimport { UserService } from './services/user.service';\nimport { UserTestService } from './services/usertest.service';\nimport { TestInfoComponent } from './test-info/test-info.component';\nimport { TestListComponent } from './admin-panel/test/test-list/test-list.component';\nimport { TestEditComponent } from './admin-panel/test/test-edit/test-edit.component';\nimport { TestFormComponent } from './admin-panel/test/test-form/test-form.component';\nimport { QuestionService } from './services/question.service';\nimport { AnswerService } from './services/answer.service';\nimport { TestCreateComponent } from './admin-panel/test/test-create/test-create.component';\nimport { UserTestListComponent } from './admin-panel/user-test/user-test-list/user-test-list.component';\nimport { UserTestFormUTComponent } from './admin-panel/user-test/user-test-form-ut/user-test-form-ut.component';\nimport { UserTestEditComponent } from './admin-panel/user-test/user-test-edit/user-test-edit.component';\nimport { UserTestFormMTComponent } from './admin-panel/user-test/user-test-form-mt/user-test-form-mt.component';\nimport { UserTestCreateComponent } from './admin-panel/user-test/user-test-create/user-test-create.component';\nimport { ConfirmEmailComponent } from './user/confirm-email/confirm-email.component';\nimport { ForgotPasswordComponent } from './user/forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './user/reset-password/reset-password.component';\nimport { ExternalLoginComponent } from './user/external-login/external-login.component';\nimport { AccountService } from './services/account.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    RegistrationComponent,\n    LoginComponent,\n    HomeComponent,\n    HomeComponent,\n    TestStartComponent,\n    AdminPanelComponent,\n    ForbiddenComponent,\n    UserFormComponent,\n    UserListComponent,\n    UserEditComponent,\n    AccountComponent,\n    TestInfoComponent,\n    TestListComponent,\n    TestEditComponent,\n    TestFormComponent,\n    TestCreateComponent,\n    UserTestListComponent,\n    UserTestFormUTComponent,\n    UserTestEditComponent,\n    UserTestFormMTComponent,\n    UserTestCreateComponent,\n    ConfirmEmailComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n    ExternalLoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NgxSpinnerModule,\n    ToastrModule.forRoot({\n      progressBar: true\n    }),\n    FormsModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n    UserService,\n    TestService, \n    QuestionService,\n    AnswerService,\n    AuthService, \n    AccountService,\n    UserTestService,\n    UserFormComponent,\n    TestFormComponent,\n    UserTestFormMTComponent,\n    ExitTestStartGuard, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n\r\n  constructor(private router: Router, private authService: AuthService) {\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n    if (localStorage.getItem('token') != null){\r\n      let roles = next.data['permittedRoles'] as Array<string>;\r\n      if(roles){\r\n        if(this.authService.roleMatch(roles)){\r\n          return true;\r\n        }\r\n        else{\r\n          this.router.navigate(['/forbidden']);\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    else {\r\n      this.router.navigate(['/user/login']);\r\n      return false;\r\n    }\r\n  }\r\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) {\r\n\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (localStorage.getItem('token') != null) {\r\n            const clonedReq = req.clone({\r\n                headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\r\n            });\r\n            return next.handle(clonedReq).pipe(\r\n                tap(\r\n                    succ => { },\r\n                    err => {\r\n                        if (err.status == 401){\r\n                            localStorage.removeItem('token');\r\n                            this.router.navigateByUrl('/user/login');\r\n                        }\r\n                        else if(err.status == 403){\r\n                            this.router.navigateByUrl('/forbidden');\r\n                        }\r\n                    }\r\n                )\r\n            )\r\n        }\r\n        else\r\n            return next.handle(req.clone());\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styles: [\n  ]\n})\nexport class ForbiddenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col s6 offset-s3\">\n      <div class=\"card\">\n        <div class=\"card-image\">\n          <img src=\"/assets/img/403.png\" style=\"height:300px;width:300px;\">\n  \n        </div>\n        <div class=\"card-content\">\n          <span class=\"card-title\" style=\"color:#039be5\">403 - ACCESS DENIED</span>\n          <p>You don't have the permission to access this resource.</p>\n        </div>\n      </div>\n    </div>\n  </div>","import { UserTestService } from '../services/usertest.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Test } from '../models/test';\nimport { TestService } from '../services/test.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  title: string;\n  previousTests: Test[];\n  pageNumber: number = 1;\n  tests: Test[]; \n  userTests;\n\n  constructor(private router: Router, private userTestService: UserTestService, private testService: TestService) { }\n\n  ngOnInit() {\n    this.loadTests();\n    this.loadUserTests();\n  }\n\n  loadTests() {\n    this.testService.getTestsForPagination(this.pageNumber).subscribe((data: Test[]) => {\n      this.tests = data;\n      if(data.length != 0 ){\n        this.previousTests = data;\n      }\n      else{\n        this.tests = this.previousTests;\n        this.pageNumber--;\n      }\n    })\n  }\n\n  nextPage(){\n    this.pageNumber++;\n    this.loadTests();\n  }\n\n  previousPage(){\n    if(this.pageNumber > 1){\n      this.pageNumber--;\n    }\n    this.loadTests();\n  }\n  \n  loadUserTests(){\n    console.log(\"a\");\n    this.userTestService.getTopUserTests(10)\n      .subscribe((data: object[]) =>{\n         this.userTests = data;\n      })\n  }\n\n  loadTestsByTitle(){\n    setTimeout(() => {\n      if(this.title == \"\"){\n        this.loadTests();\n      }\n      else{\n        this.testService.getTestsByTitle(this.title).subscribe((data: Test[]) => {\n          this.tests = data;\n        })\n      }\n    }, 0);\n  }\n}","<div class=\"container\">\n    <div class=\"col-lg-6 floating\">\n        <h1>Список тестов</h1>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Название теста\" [(ngModel)]=\"title\" (ngModelChange)=\"loadTestsByTitle()\">\n        <table class=\"table mtable\">\n            <thead>\n                <tr>\n                    <td>Тест</td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let t of tests\">\n                    <td><a routerLink=\"/test/{{t.testId}}\" class=\"nav-link tlink\">{{t?.title}}</a></td>\n                </tr>\n            </tbody>\n        </table>\n        <div class=\"text-center\">\n            <button class=\"btn btn-sm btn-info mx-3\" (click)=\"previousPage()\"><</button>\n            <button class=\"btn btn-sm btn-info\" (click)=\"nextPage()\">></button>\n        </div>\n    </div>\n    <div class=\"col-lg-6 floating\">\n        <h1>Топ 10 результатов</h1>\n        <table class=\"table mtable\">\n            <thead>\n                <tr>\n                    <td>№</td>\n                    <td>Пользователь</td>\n                    <td>Тест</td>\n                    <td>Результат</td>\n                    <td>Время</td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let u of userTests; let i = index\">\n                    <td>{{i+1}}</td>\n                    <td><a routerLink=\"/account/{{u.userId}}\">{{u?.Username}}</a></td>\n                    <td><a routerLink=\"/test/{{u.TestId}}\">{{u?.Test}}</a></td>\n                    <td>{{u?.Mark}}%</td>\n                    <td>{{u?.Time.substring(14)}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Question } from './question';\r\n\r\nexport class Answer {\r\n    AnswerId: number;\r\n    Content: string;\r\n    IsCorrect: boolean;\r\n    Mark: number;\r\n    QuestionId: number;\r\n    Question: Question;\r\n}","import { Test } from './test';\r\n\r\nexport class Question {\r\n    QuestionId: number;\r\n    Content: string;\r\n    TestId: number;\r\n    IsSingle: boolean;\r\n    Test: Test;\r\n    AnswerDescription: string;\r\n}","export class Test {\r\n    testId: number;\r\n    title: string;\r\n    maxScore: number;\r\n    description: string;\r\n    maxTime: Date;\r\n    questionsCount: number;\r\n    passedTimes: number;\r\n}","export class TestResult {\r\n\r\n    UserTestId: number;\r\n    UserId: string;\r\n    Username: string;\r\n    TestId: number;\r\n    TestTitle: string;\r\n    Mark: number;\r\n    Time: Date;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n\r\n    private accountUrl = environment.apiUrl + 'account/';\r\n\r\n    constructor(private fb: FormBuilder, private http: HttpClient) { }\r\n    \r\n    passwordModel = this.fb.group({\r\n        Passwords: this.fb.group({\r\n            OldPassword: ['', Validators.required],\r\n            Password: ['', [Validators.required, Validators.minLength(6)]],\r\n            ConfirmPassword: ['', Validators.required]\r\n            }, { validator: this.comparePasswords })\r\n    });\r\n\r\n    usernameModel = this.fb.group({\r\n        NewUsername: ['', Validators.required]\r\n    });\r\n\r\n    newEmailModel = this.fb.group({\r\n        UserEmail: ['', [Validators.email, Validators.required]]\r\n    });\r\n\r\n    comparePasswords(fb: FormGroup) {\r\n        let confirmPswrdCtrl = fb.get('ConfirmPassword');\r\n        if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\r\n          if (fb.get('Password').value != confirmPswrdCtrl.value)\r\n            confirmPswrdCtrl.setErrors({ passwordMismatch: true });\r\n          else\r\n            confirmPswrdCtrl.setErrors(null);\r\n        }\r\n    }\r\n    \r\n    changePassword(userId: string){\r\n        let body = {\r\n            UserId: userId,\r\n            OldPassword: this.passwordModel.value.Passwords.OldPassword,\r\n            NewPassword: this.passwordModel.value.Passwords.Password\r\n        };\r\n        return this.http.put(this.accountUrl + 'changePassword', body);\r\n    }\r\n\r\n    changeUsername(oldUsername:string){\r\n        let body = {\r\n            OldUsername: oldUsername,\r\n            NewUsername: this.usernameModel.value.NewUsername\r\n        };\r\n        return this.http.put(this.accountUrl + 'changeUsername', body);\r\n    }\r\n\r\n    changeEmail(oldEmail: string){\r\n        let body = {\r\n            OldEmail: oldEmail,\r\n            NewEmail: this.newEmailModel.value.UserEmail\r\n        };\r\n        return this.http.post(this.accountUrl + 'changeEmail', body);\r\n    }\r\n\r\n    changeProfileImage(email: string, profileImageUrl: string){\r\n        let body = {\r\n            Email: email,\r\n            profileImageUrl: profileImageUrl\r\n        };\r\n        return this.http.put(this.accountUrl + 'changeProfileImage', body);\r\n    }\r\n\r\n    changeAboutMe(email: string, aboutMe: string){\r\n        let body = {\r\n            Email: email,\r\n            AboutMe: aboutMe\r\n        };\r\n        return this.http.put(this.accountUrl + 'changeAboutMe', body);\r\n    }\r\n\r\n    confirmNewEmail(body){\r\n        return this.http.post(this.accountUrl + 'confirmNewEmail', body);\r\n    }\r\n\r\n    getUserProfile() {\r\n        return this.http.get(this.accountUrl + 'profile');\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Answer } from '../models/answer';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class AnswerService {\r\n\r\n    private answerUrl = environment.apiUrl + 'answer/';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n    \r\n    getAnswerById(id: number) {\r\n        return this.http.get(this.answerUrl + id);\r\n    }\r\n\r\n    createAnswerForNewQuestion(answer: Answer){\r\n        return this.http.post(this.answerUrl + 'newQuestion', answer);\r\n    }\r\n\r\n    createAnswerForOldQuestion(answer: Answer){\r\n        return this.http.post(this.answerUrl + 'oldQuestion', answer);\r\n    }\r\n\r\n    getAnswersByQuestionId(id){\r\n        return this.http.get(this.answerUrl + `question/${id}`);\r\n    }\r\n\r\n    deleteAnswer(id){\r\n        return this.http.delete(this.answerUrl + id);\r\n    }\r\n\r\n    editAnswer(answer: Answer){\r\n        return this.http.put(this.answerUrl, answer);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  options;\n  constructor(private fb: FormBuilder, private http: HttpClient) {\n    this.options = {\n      headers: new HttpHeaders().append('Content-Type', 'application/json')\n    };\n  }\n  readonly authUrl = environment.apiUrl + 'auth/';\n\n  formModel = this.fb.group({\n    UserName: ['', Validators.required],\n    Email: ['', [Validators.email, Validators.required]],\n    Passwords: this.fb.group({\n      Password: ['', [Validators.required, Validators.minLength(6)]],\n      ConfirmPassword: ['', Validators.required]\n    }, { validator: this.comparePasswords })\n  });\n\n  passwordsModel = this.fb.group({\n    Passwords: this.fb.group({\n      Password: ['', [Validators.required, Validators.minLength(6)]],\n      ConfirmPassword: ['', Validators.required]\n    }, { validator: this.comparePasswords })\n  })\n\n  emailModel = this.fb.group({\n    Email: ['', [Validators.email, Validators.required]]\n  });\n\n  comparePasswords(fb: FormGroup) {\n    let confirmPswrdCtrl = fb.get('ConfirmPassword');\n    if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\n      if (fb.get('Password').value != confirmPswrdCtrl.value)\n        confirmPswrdCtrl.setErrors({ passwordMismatch: true });\n      else\n        confirmPswrdCtrl.setErrors(null);\n    }\n  }\n\n  register() {\n    var body = {\n      UserName: this.formModel.value.UserName,\n      Email: this.formModel.value.Email,\n      Password: this.formModel.value.Passwords.Password\n    };\n    return this.http.post(this.authUrl + 'register', body);\n  }\n\n  login(formData) {\n    return this.http.post(this.authUrl + 'login', formData);\n  }\n\n  roleMatch(allowedRoles): boolean {\n    var isMatch = false;\n    var payLoad = JSON.parse(window.atob(localStorage.getItem('token').split('.')[1]));\n    var userRole = payLoad.role;\n    allowedRoles.forEach(element => {\n      if (userRole == element) {\n        isMatch = true;\n        return false;\n      }\n    });\n    return isMatch;\n  }\n\n  confirmEmail(userId: string, token: string){\n    let body = JSON.stringify(token);\n    return this.http.post(this.authUrl + `confirmemail/${userId}`, body, this.options);\n  }\n\n  forgotPassword(){\n    let body = JSON.stringify(this.emailModel.value.Email);\n    return this.http.post(this.authUrl + 'forgotpassword', body, this.options);\n  }\n\n  resetPassword(userId: string, token: string){\n    var body = {\n      UserId: userId,\n      Password: this.passwordsModel.value.Passwords.Password,\n      Token: token\n    };\n    return this.http.post(this.authUrl + 'resetpassword', body);\n  }\n\n  googleLogin(){\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     \"Access-Control-Allow-Origin\": \"*\"\n    //   })\n    // };\n    // return this.http.get(\"https://localhost:44340/api/auth/googlelogin\");\n    document.location.href = this.authUrl + \"googlelogin\";\n  }\n\n  facebookLogin(){\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     \"Access-Control-Allow-Origin\": \"*\"\n    //   })\n    // };\n    // return this.http.get(\"https://localhost:44340/api/auth/facebooklogin\", httpOptions);\n    document.location.href = this.authUrl + \"facebooklogin\";\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Question } from '../models/question';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class QuestionService {//experimental decorations\r\n\r\n    private questionUrl = environment.apiUrl + 'question/';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getQuestionById(id: number) {\r\n        return this.http.get(this.questionUrl + id);\r\n    }\r\n\r\n    createQuestionForNewTest(question: Question){\r\n        return this.http.post(this.questionUrl + \"newTest\", question);\r\n    }\r\n\r\n    createQuestionForOldTest(question: Question){\r\n        return this.http.post(this.questionUrl + \"oldTest\", question);\r\n    }\r\n\r\n    deleteQuestion(questionId: number){\r\n        return this.http.delete(this.questionUrl + questionId);\r\n    }\r\n\r\n    editQuestion(question: Question){\r\n        return this.http.put(this.questionUrl, question);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Test } from '../models/test';\r\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class TestService {\r\n\r\n    private testUrl = environment.apiUrl + 'test/';\r\n\r\n    constructor(private fb: FormBuilder, private http: HttpClient) {\r\n    }\r\n\r\n    testModel = this.fb.group({\r\n        Title: ['', Validators.required],\r\n        Description: ['', Validators.required],\r\n        QuestionsCount: ['', [this.questionCountRangeValidator, Validators.required]],\r\n        Time: ['', [Validators.pattern('[0-5][0-9][:][0-5][0-9]'), Validators.required]]\r\n    });\r\n    \r\n    questionCountRangeValidator(control: AbstractControl): { [key: string]: boolean } | null {\r\n        if (control.value !== undefined && (isNaN(control.value) || control.value < 0 || control.value > 50)) {\r\n            return { 'questionCountRange': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getTests() {\r\n        return this.http.get(this.testUrl);\r\n    }\r\n\r\n    getTestById(id: number) {\r\n        return this.http.get(this.testUrl + id);\r\n    }\r\n    \r\n    getTestStart(id: number) {\r\n        return this.http.get(this.testUrl + `${id}/start`);\r\n    }\r\n\r\n    deleteTest(id: string){\r\n        return this.http.delete(this.testUrl + id);\r\n    }\r\n\r\n    putTest(test: Test){\r\n        return this.http.put(this.testUrl, test);\r\n    }\r\n\r\n    createTest(test: Test){\r\n        return this.http.post(this.testUrl, test);\r\n    }\r\n\r\n    getTestsForPagination(pageNumber){\r\n        return this.http.get(this.testUrl + `pagination?pageNumber=${pageNumber}&pageSize=4`);\r\n    }\r\n\r\n    getTestsByTitle(title){\r\n        return this.http.get(this.testUrl + `title/${title}`);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/user';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    private userUrl = environment.apiUrl + 'user/';\r\n\r\n    constructor(private fb: FormBuilder, private http: HttpClient) { }\r\n    \r\n    emailModel = this.fb.group({\r\n        UserEmail: ['', [Validators.email]]\r\n    });\r\n      \r\n    getUsers() {\r\n        return this.http.get(this.userUrl);\r\n    }\r\n\r\n    getUser(id: string){\r\n        return this.http.get(this.userUrl + id);\r\n    }\r\n\r\n    deleteUser(id: string){\r\n        return this.http.delete(this.userUrl + id);\r\n    }\r\n\r\n    putUser(user: User){\r\n        return this.http.put(this.userUrl, user);\r\n    }\r\n\r\n    getUsersForPagination(pageNumber){\r\n        return this.http.get(this.userUrl + `pagination?pageNumber=${pageNumber}`);\r\n    }\r\n\r\n    changeUserRole(user: User){\r\n        return this.http.put(this.userUrl + 'changeRole', user);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TestResult } from '../models/testResult';\r\nimport { environment } from '../../environments/environment';\r\nimport { FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class UserTestService {\r\n\r\n    private userTestUrl = environment.apiUrl + 'usertest/';\r\n\r\n    constructor(private fb: FormBuilder, private http: HttpClient) {\r\n    }\r\n\r\n    userTestModel = this.fb.group({\r\n        Username: ['', Validators.required],\r\n        TestTitle: ['', Validators.required],\r\n        Mark: ['', [this.markRangeValidator, Validators.required]],\r\n        Time: ['', [Validators.pattern('[0-5][0-9][:][0-5][0-9]'), Validators.required]]\r\n    });\r\n\r\n    markRangeValidator(control: AbstractControl): { [key: string]: boolean } | null {\r\n        if (control.value !== undefined && (isNaN(control.value) || control.value < 0 || control.value > 100)) {\r\n            return { 'markRange': true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getAllUserTests(){\r\n        return this.http.get(this.userTestUrl);\r\n    }\r\n\r\n    getTopUserTests(count: number){\r\n        return this.http.get(this.userTestUrl + `top/${count}`);\r\n    }\r\n    \r\n    getUserTestsByUserId(id: string){\r\n        return this.http.get(this.userTestUrl + `user/${id}`);\r\n    }\r\n\r\n    getUserTestById(id: string){\r\n        return this.http.get(this.userTestUrl + id)\r\n    }\r\n\r\n    postTestResult(testResult: TestResult){\r\n        return this.http.post(this.userTestUrl, testResult);\r\n    }\r\n\r\n    putUserTest(testResult: TestResult){\r\n        return this.http.put(this.userTestUrl, testResult);\r\n    }\r\n\r\n    postTestResultByAdmin(testResult: TestResult){\r\n        return this.http.post(this.userTestUrl + \"admin\", testResult);\r\n    }\r\n    \r\n    deleteUserTest(id: string){\r\n        return this.http.delete(this.userTestUrl + id);\r\n    }\r\n\r\n    getUserTestsForPagination(pageNumber){\r\n        return this.http.get(this.userTestUrl + `pagination?pageNumber=${pageNumber}`);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { TestService } from '../services/test.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Test } from '../models/test';\n\n@Component({\n  selector: 'app-test-info',\n  templateUrl: './test-info.component.html',\n  styles: []\n})\nexport class TestInfoComponent implements OnInit {\n\n  test;\n  loaded: boolean = false;\n\n  constructor(private testService: TestService, private router: Router, activeRoute: ActivatedRoute) {\n    this.test = new Test();\n    this.test.testId= Number.parseInt(activeRoute.snapshot.params[\"id\"]);\n  }\n\n  ngOnInit() {\n    this.getTest();\n  }\n\n  getTest() {\n    this.testService.getTestById(this.test.testId)\n        .subscribe((data: Test) => {\n          this.test = data;\n          //this.test.maxTime = new Date(data[\"maxTime\"]);\n          if(this.test != null){\n            this.loaded = true;\n          }\n        })\n  }\n}\n","<div *ngIf=\"loaded\">\n    <div class=\"container\">\n        <table class=\"table mtable\" style=\"margin: 30px;\">\n            <thead>\n                <tr>\n                    <td>Тест</td>\n                    <td>Описание</td>\n                    <td>Бал</td>\n                    <td>Количество вопросов</td>\n                    <td>Пройдено раз</td>\n                    <td>Время</td>\n                </tr>\n            </thead>\n            <tbody> \n                <tr>\n                    <td>{{test.title}}</td>\n                    <td>{{test.description}}</td> \n                    <td>{{test.maxScore}}</td>\n                    <td>{{test.questionsCount}}</td>\n                    <td>{{test.passedTimes}}</td>\n                    <td>{{test.maxTime.substring(14)}}</td>\n                </tr>\n            </tbody>\n        </table>\n        <div class=\"text-center\">\n            <button class=\"btn btn-success\" routerLink=\"/teststart/{{test.testId}}\">Начать тестирование</button>\n        </div>\n    </div>\n</div>","import {CanDeactivate} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\n \r\nexport interface ComponentCanDeactivate{\r\n    canDeactivate: () => boolean | Observable<boolean>;\r\n}\r\n \r\nexport class ExitTestStartGuard implements CanDeactivate<ComponentCanDeactivate>{\r\n \r\n    canDeactivate(component: ComponentCanDeactivate) : Observable<boolean> | boolean{\r\n         \r\n        return component.canDeactivate ? component.canDeactivate() : true;\r\n    }\r\n}","import { Component, OnInit, HostListener, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router, CanDeactivate } from '@angular/router';\nimport { TestService } from '../services/test.service';\nimport { ComponentCanDeactivate } from './exit.test-start.guard';\nimport { Test } from '../models/test';\nimport { Question } from '../models/question';\nimport { Answer } from '../models/answer';\nimport { forkJoin, Observable } from 'rxjs';\nimport { TestResult } from '../models/testResult';\nimport { UserService } from '../services/user.service';\nimport { QuestionService } from '../services/question.service';\nimport { AnswerService } from '../services/answer.service';\nimport { UserTestService } from '../services/usertest.service';\nimport { AccountService } from '../services/account.service';\n\n@Component({\n  selector: 'app-test-start',\n  templateUrl: './test-start.component.html',\n  styleUrls: ['./test-start.component.css']\n})\nexport class TestStartComponent implements OnInit, ComponentCanDeactivate {\n\n  testInfo: Map<Question, Answer[]>;\n  loaded: boolean = false;\n  sum: number = 0;\n  timeLeft: number;\n  submitted: boolean = false;\n  localstorageTime: number;\n  localstorageTimeSet: boolean;\n  test: Test;\n  testId: number;\n  testResult: TestResult;\n  message: string;\n  interval;\n  userDetails;\n  result;\n  all;\n  observables;\n  minutes;\n  seconds;\n  answers;\n  answers1;\n\n\n  constructor(private testService: TestService, \n              private accountService: AccountService, \n              private questionService: QuestionService,\n              private answerService: AnswerService,\n              private userTestService: UserTestService,\n              private activeRoute: ActivatedRoute) {\n    this.testId = Number.parseInt(activeRoute.snapshot.params[\"id\"]);\n  }\n\n  ngOnInit(){\n      if (this.testId) {\n        this.getTest();\n        this.loadTestInfoGet();\n        this.fillLocalstorageTime();\n        this.accountService.getUserProfile().subscribe(\n          res => {\n            this.userDetails = res;\n          },\n          err => {\n            console.log(err);\n          },\n        );\n    }\n  }\n\n  loadTestInfoGet() {\n    let testInfoGet = new Map<string, Answer[]>();\n    this.testService.getTestStart(this.testId)\n        .subscribe((data: Map<string, Answer[]>) => {\n            testInfoGet = data; this.loaded = true;\n            this.fillQuestions(testInfoGet);\n        })\n  }\n\n  fillQuestions(testInfoGet: Map<string, Answer[]>) {\n    this.testInfo = new Map<Question, Answer[]>();\n    for (let t in testInfoGet) {\n        this.questionService.getQuestionById(Number(t))\n            .subscribe((data1: Question) => {\n                this.fillTestInfo(testInfoGet, data1);\n            })\n    }\n  }\n\n  fillTestInfo(testInfo: Map<string, Answer[]>, question: Question) {\n    this.testInfo.set(question, testInfo[question[\"questionId\"].toString()]);\n  }\n\n  onSubmit() {\n    if(!this.submitted){\n      this.endTest1();\n      if(this.observables.length > 0){\n        this.endTest2();\n      }\n      else{\n        alert(\"Вы не ответили ни на один вопрос, тест не может быть завершен!\");\n      }\n    }\n  }\n\n  getTest() {\n    this.testService.getTestById(this.testId)\n        .subscribe((data: Test) => {\n            this.test = new Test();\n            this.test.maxScore = data[\"maxScore\"];\n            this.test.description = data[\"description\"];\n            this.test.maxTime = new Date(data[\"maxTime\"]);\n            this.timer(data[\"maxTime\"]);\n        })\n  }\n\n  timer(data: Date) {\n    var d1 = new Date();\n    var d2 = new Date(d1);\n    var y = new Date(data);\n    d2.setMinutes(d1.getMinutes() + y.getMinutes());\n    d2.setSeconds(d2.getSeconds() + y.getSeconds() + 2);\n    var countDownDate = new Date(d2).getTime();\n\n    var startDate = new Date().getTime();\n    var passed = 0;\n    // Update the count down every 1 second\n    this.interval = setInterval(() => {\n        // Get today's date and time\n        var now = new Date().getTime();\n        var remaining = 0;\n        // Find the dremaining between now and the count down date\n        if(this.localstorageTimeSet == true){\n          passed = countDownDate - startDate - this.localstorageTime;\n          this.localstorageTimeSet = false;\n        }\n        remaining = countDownDate - now - passed;\n\n        // Time calculations for days, hours, minutes and seconds\n        var minutes = Math.floor((remaining % (1000 * 60 * 60)) / (1000 * 60));\n        var seconds = Math.floor((remaining % (1000 * 60)) / 1000);\n\n        // Display the result in the element with id=\"time\"\n        document.getElementById(\"time\").innerHTML = minutes + \"m \" + seconds + \"s \";\n\n        if (remaining < 60000) {\n            var element = document.getElementById(\"countd\");\n            element.classList.remove(\"bg-gradient-4\");\n            element.classList.add(\"bg-gradient-3\");\n        }\n        // If the count down is finished, write some text\n        if (remaining < 0) {\n            this.endTest1();\n            this.endTest2();\n            document.getElementById(\"time\").innerHTML = \"Время вышло\";\n        }\n\n        this.timeLeft = remaining;\n    }, 1000);\n  }\n\n  @HostListener('window:beforeunload', ['$event']) onBeforeUnload(event) {\n    localStorage.setItem(`time_${this.testId}`, this.timeLeft.toString());  \n    clearInterval(this.interval);\n    if(this.submitted){\n      localStorage.removeItem(`time_${this.testId}`);\n    }\n    return false;\n  }\n\n  canDeactivate() : boolean | Observable<boolean>{\n    if(!this.submitted){\n      var result  = confirm(\"Вы не закончили прохождение теста, вы уверены что хотите покинуть страницу? В результат теста запишется ваш текущий результат.\");\n      if(result == true){\n        this.endTest1();\n        this.endTest2();          \n        localStorage.removeItem(`time_${this.testId}`);\n        clearInterval(this.interval);\n      }\n      return result;        \n    }\n    else{\n      localStorage.removeItem(`time_${this.testId}`);\n      clearInterval(this.interval);\n      return true;\n    }\n  }\n\n  fillLocalstorageTime(){\n    this.localstorageTime = Number(localStorage.getItem(`time_${this.testId}`));\n    if(this.localstorageTime != 0){\n      this.localstorageTimeSet = true;\n    }\n  }\n\n  endTest1(){\n    var min = this.test.maxTime.getMinutes() * 60000;\n    var sec = this.test.maxTime.getSeconds() * 1000;\n    var rizn = min + sec - this.timeLeft;\n\n    this.minutes = Math.floor((rizn % (1000 * 60 * 60)) / (1000 * 60));\n    this.seconds = Math.floor((rizn % (1000 * 60)) / 1000) + 1;\n     \n    this.answers1 = document.getElementsByName(\"answer\");\n    this.answers = this.answers1 as unknown as HTMLInputElement;\n\n    this.all = [];\n    this.observables = [];\n    for (let i = 0; i < this.answers1.length; i++) {\n        if (this.answers[i].checked) {\n            this.observables.push(this.answerService.getAnswerById(this.answers[i].id));\n        }\n        this.all.push(this.answerService.getAnswerById(this.answers[i].id));\n    }\n  }\n\n  endTest2(){\n    if(this.observables.length == 0){\n      this.sum = 0;\n      this.fillTestResult();\n      this.endTest3();\n    }\n    else{\n      forkJoin(this.observables).subscribe((data: Answer[]) => {\n        this.sum = (data || []).reduce((res, ans: Answer) => res + ans[\"mark\"], 0);\n        if(this.sum < 0){\n          this.sum = 0;\n        }\n        this.fillTestResult();\n        if(this.timeLeft > 0){\n          var result = confirm(\"Вы уверены что хотите завершить прохождение теста?\");\n          if(result){\n            this.endTest3();\n          }\n        }\n        else{\n          this.endTest3();\n        }\n      });\n    }\n  }\n\n  endTest3(){\n    this.submitted = true;\n    forkJoin(this.all).subscribe((data: Answer[]) => {\n      if(window.location.href.toString().includes(\"teststart\")){\n        for(let i = 0; i < data.length; i++){\n          if(data[i][\"isCorrect\"]){\n            document.getElementById(`check_${this.answers[i].id}`).classList.add(\"correct\");\n          }\n        }\n      }\n    });\n    document.getElementById('subButton').innerHTML = \"Результат\";\n    clearInterval(this.interval);\n    this.userTestService.postTestResult(this.testResult).subscribe(data => console.log(\"Finish\"));\n  }\n\n  fillTestResult(){\n    var timeResult = new Date();\n    timeResult.setMinutes(this.minutes);\n    timeResult.setSeconds(this.seconds);\n    timeResult.setMilliseconds(0);\n    this.testResult = new TestResult();\n    this.testResult.Mark = Number(((Number(this.sum)/this.test.maxScore) * 100).toFixed(2));\n    this.testResult.TestId = this.testId;\n    this.testResult.Time = timeResult;\n    this.testResult.UserId = this.userDetails.id;\n    if(this.testResult.Mark == 0){\n      this.message = \"Ваш результат невообразимо ужасен! Может Вы сознательно выбирали неправильные ответы?\";\n    }\n    else if(this.testResult.Mark > 0 && this.testResult.Mark < 40){\n      this.message = \"Грош цена вашему результату! Вы уверены что хотите быть программистом?\";\n    }\n    else if(this.testResult.Mark >= 40 && this.testResult.Mark < 60){\n      this.message = \"Это плохой результат. Вам нужно подучить теорию.\"\n    }\n    else if(this.testResult.Mark >= 60 && this.testResult.Mark < 70){\n      this.message = \"Это посредственный результат. Вам стоит больше практиковаться.\";\n    }\n    else if(this.testResult.Mark >= 70 && this.testResult.Mark < 80){\n      this.message = \"Это хороший результат, продолжайте обучение в том же духе!\";\n    }\n    else if(this.testResult.Mark >= 80 && this.testResult.Mark < 90){\n      this.message = \"Это отличный результат. Вы хорошо подготовились.\";\n    }\n    else if(this.testResult.Mark >= 90 && this.testResult.Mark < 100){\n      this.message = \"Это изумительный результат! Ваши знания программирования выше всяких похвал!\";\n    }\n    else{\n      this.message = \"Идеально! Вы Бог программирования!\";\n    }\n  }\n}","<div *ngIf=\"loaded\">\n    <div class=\"container\">\n        <h3 id=\"testtitle\">{{test.description}}</h3>\n        <div id=\"timer-wrapper\">\n            <div class=\"rounded bg-gradient-4 text-white shadow text-center\" id=\"countd\">\n                <p class=\"mb-0 font-weight-bold text-uppercase\">Limited Time Only!</p>\n                <div id=\"clock-a\" class=\"countdown pt-4\">\n                    <span id=\"time\"></span>\n                </div>\n            </div>\n        </div>\n        <br>\n        <div *ngFor=\"let item of testInfo | keyvalue; let i = index\">\n            <form name=\"form_{{i}}\">\n                <p><b>{{i+1}}. {{item.key.content}}</b></p>\n                <div *ngFor=\"let s of item.value\">\n                    <div *ngIf=\"item.key.isSingle; else isMultiple\">\n                        <p>\n                            <input type=\"radio\" name=\"answer\" id=\"{{s.answerId}}\" />\n                            <i id=\"check_{{s.answerId}}\"> {{s.content}}</i>\n                        </p>\n                    </div>\n                    <ng-template #isMultiple>\n                        <p>\n                            <input type=\"checkbox\" name=\"answer\" id=\"{{s.answerId}}\" />\n                            <i id=\"check_{{s.answerId}}\"> {{s.content}}</i>\n                        </p>\n                    </ng-template>\n                </div>\n                <div *ngIf=\"submitted\">\n                    <div *ngIf=\"item.key.answerDescription\">\n                        <p>Объяснение правильного ответа:</p>\n                        <p>{{item.key.answerDescription}}</p>\n                    </div>\n                </div>\n            </form>\n            <br/>\n        </div>\n        <button class=\"btn btn-success\" style=\"margin-bottom: 20px; margin-left: 10px;\" type=\"submit\" id=\"subButton\" (click)=\"onSubmit()\" data-toggle=\"modal\" data-target=\"#modalresults\">Завершить</button>\n    </div>\n</div>\n<div class=\"modal fade\" id=\"modalresults\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" *ngIf=\"submitted\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Результат</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n        <div class=\"modal-body\">\n            <div class=\"results\">\n                <p>Вы набрали: {{testResult.Mark}}% баллов</p>\n                <p>{{message}}</p>\n                <p>Потраченное время на тест: {{testResult.Time.getMinutes()}} минут и {{testResult.Time.getSeconds()}} секунд</p>\n            </div> \n        </div>\n      </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-confirm-email',\n  templateUrl: './confirm-email.component.html',\n  styleUrls: ['./confirm-email.component.css']\n\n})\nexport class ConfirmEmailComponent implements OnInit {\n\n  userId: string;\n  token: string;\n  emailConfirmed: boolean; \n  newEmailConfirmed: boolean;\n  forNewEmail: boolean;\n  newEmail: string;\n\n  constructor(private toastr: ToastrService, private activatedRoute: ActivatedRoute, private accountService: AccountService, private authService: AuthService) {\n    this.activatedRoute.queryParams.subscribe(params => {\n          this.userId = params['userId'];\n          this.token = params['token'];\n          if(params['newEmail'] != null){\n            this.newEmail = params['newEmail'];\n            this.forNewEmail = true;\n          }\n      });\n  }\n\n  ngOnInit(): void {\n    if(this.forNewEmail){\n      this.confirmNewEmail();\n    }\n    else{\n      this.confirmEmail();\n    }\n  }\n\n  confirmEmail(){\n    this.authService.confirmEmail(this.userId, this.token).subscribe(data => { this.emailConfirmed = true; });\n  }\n\n  confirmNewEmail(){\n    var body = {\n      userId: this.userId,\n      newEmail: this.newEmail,\n      token: this.token\n    }\n    this.accountService.confirmNewEmail(body).subscribe(data => { this.newEmailConfirmed = true; });\n  }\n}\n","<div class=\"mx-4 my-2 py-4 conf\" style=\"text-align: center;\">\n    <div *ngIf=\"!forNewEmail\">\n        <div *ngIf=\"!emailConfirmed\">\n            <p>Email не был подтвержден, проверьте Вашу почту.</p>\n        </div>\n        <div *ngIf=\"emailConfirmed\">\n            <p>Email был успешно подтвержден, войдите в свой аккаунт, для доступа к функционалу сайта.</p>\n        </div>\n    </div>\n    <div *ngIf=\"forNewEmail\">\n        <div *ngIf=\"!newEmailConfirmed\">\n            <p>Email не был изменен, проверьте Вашу почту.</p>\n        </div>\n        <div *ngIf=\"newEmailConfirmed\">\n            <p>Email был успешно изменен, войдите в свой аккаунт, для доступа к функционалу сайта.</p>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-external-login',\n  templateUrl: './external-login.component.html',\n  styleUrls: ['./external-login.component.css']\n})\nexport class ExternalLoginComponent implements OnInit {\n\n  token: string;\n  isSuccess: boolean;\n\n  constructor(private toastr: ToastrService, private activatedRoute: ActivatedRoute, private router: Router) { \n    this.activatedRoute.queryParams.subscribe(params => {\n      if(params['token']){\n        this.token = params['token'];\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    if(this.token){\n      localStorage.setItem('token', this.token);\n      this.router.navigateByUrl('/home');\n    }\n    else{\n      this.toastr.error('Что-то пошло не так','Безуспешно.');\n      this.router.navigateByUrl('/user/login');\n    }\n  }\n}\n","<div class=\"mx-4 my-2 py-4 conf\" style=\"text-align: center;\">\n    <p>Что-то пошло не так.</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(public authService: AuthService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(){\n    this.authService.forgotPassword().subscribe(\n      data => {\n        this.toastr.success('Для восстановления, перейдите по ссылке, которая была отправлена на указаную почту.', 'Успешно.');\n      },\n      err => {\n        if (err.error == \"User was not found\"){\n          this.toastr.error('Пользователь с такой почтой не был найден.', 'Пароль не может быть восстановлен.');\n        }\n        else if(err.error == \"Email is not confirmed\"){\n          this.toastr.error('Почта не подтверждена.', 'Пароль не может быть восстановлен.');\n        }\n        else{\n          this.toastr.error('Что-то пошло не так.', 'Пароль не может быть восстановлен.');\n        }\n      });\n  }\n}\n","<form [formGroup]=\"authService.emailModel\" autocomplete=\"off\" (submit)=\"onSubmit()\">\n    <div class=\"form-group required\">\n      <label>Почта</label>\n      <input class=\"form-control\" formControlName=\"Email\">\n      <label class=\"text-danger\" *ngIf=\"authService.emailModel.get('Email').touched && authService.emailModel.get('Email').errors?.required\">\n        Это поле обязательно.\n      </label>\n      <label class=\"text-danger\" *ngIf=\"authService.emailModel.get('Email').touched && authService.emailModel.get('Email').errors?.email\">\n        Почта введена неверно.\n      </label>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-8 offset-md-2\">\n        <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"!authService.emailModel.valid\">Восстановить</button>\n      </div>\n    </div>\n</form>","import { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  formModel = {\n    UserName: '',\n    Password: ''\n  }\n\n  private authWindow: Window;\n\n  constructor(private authService: AuthService, private router: Router, private toastr: ToastrService) {\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') != null)\n      this.router.navigateByUrl('/home');\n  }\n\n  onSubmit(form: NgForm) {\n    this.authService.login(form.value).subscribe(\n      (res: any) => {\n        localStorage.setItem('token', res.jwtToken);\n        this.router.navigateByUrl('/home');\n      },\n      err => {\n        if (err.error == \"Username or password is incorrect\"){\n          this.toastr.error('Логин или пароль введены неверно.', 'Вход не выполнен.');\n        }\n        else if(err.error == \"Email is not confirmed\"){\n          this.toastr.error('Почта не подтверждена.', 'Вход не выполнен.');\n        }\n        else{\n          this.toastr.error('Что-то пошло не так.', 'Вход не выполнен.');\n        }\n      }\n    );\n  }\n\n  show_hide_password(){\n    var input = document.getElementById('password-input');\n    var eye = document.getElementById('passeye');\n    if (input.getAttribute('type') == 'password') {\n      eye.classList.add('view');\n      input.setAttribute('type', 'text');\n    } else {\n      eye.classList.remove('view');\n      input.setAttribute('type', 'password');\n    }\n    return false;\n  }\n\n  googleLogin(){\n    this.authService.googleLogin();\n  }\n\n  facebookLogin(){\n    this.authService.facebookLogin();\n  }\n}","<img src=\"/assets/img/single_user.png\" class=\"mx-auto d-block\">\n<form #form='ngForm' class=\"mb-4\" autocomplete=\"off\" (submit)=\"onSubmit(form)\">\n  <div class=\"form-group\">\n    <label>Имя пользователя</label>\n    <input class=\"form-control\" #UserName=\"ngModel\" name=\"UserName\" [(ngModel)]=\"formModel.UserName\" required>\n  </div>\n  <div class=\"form-group\">\n    <label>Пароль</label>\n    <div class=\"password\">\n      <input type=\"password\" id=\"password-input\" class=\"form-control\" #Password=\"ngModel\" name=\"Password\" [(ngModel)]=\"formModel.Password\" required>\n      <a href=\"#\" id=\"passeye\" class=\"password-control\" (click)=\"show_hide_password()\"></a>\n    </div>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-6 py-2 px-4\">\n      <a class=\"btn btn-outline-secondary btn-sm\" routerLink=\"/user/forgot-password\">Забыли пароль?</a>\n    </div>\n    <div class=\"form-group col-md-6\">\n      <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"form.invalid\">Войти</button>\n    </div>\n    <div class=\"form-group col-md-6 py-2 px-4\">\n      <a class=\"btn btn-outline-secondary btn-sm\" style=\"color: #6c757d\" (click)=\"googleLogin()\">Войти через Google</a>\n    </div>\n    <div class=\"form-group col-md-6 py-2 px-4\">\n      <a class=\"btn btn-outline-secondary btn-sm\" style=\"color: #6c757d\" (click)=\"facebookLogin()\">Войти через Facebook</a>\n    </div>\n  </div>\n</form>\n","import { AuthService } from '../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(public authService: AuthService, private toastr: ToastrService) { }\n  pas1: string = \"password\";\n  pas2: string = \"confirmPassword\";\n\n  ngOnInit() {\n    this.authService.formModel.reset(); \n  }\n\n  onSubmit() {\n    this.authService.register().subscribe(\n      (res: any) => {\n        if (res.succeeded) {\n          this.authService.formModel.reset();\n          this.toastr.success('Для окончания регистрации, перейдите по ссылке, которая была отправлена на указаную почту.', 'Регистрация прошла успешно.');\n        } else {\n          res.errors.forEach(element => {\n            switch (element.code) {\n              case 'DuplicateUserName':\n                this.toastr.error('Данный логин уже занят.','Регистрация не выполнена.');\n                break;\n              default:\n                this.toastr.error(element.description,'Регистрация не выполнена.');\n                break;\n            }\n          });\n        }\n      },\n      err => {\n        console.log(err);\n        this.toastr.error('Что-то пошло не так.', 'Регистрация не выполнена.');\n      }\n    );\n  }\n\n  show_hide_password(el){\n    if(el == \"password\"){\n      var input = document.getElementById('password-input');\n      var eye = document.getElementById('passeye');\n    }\n    else{\n      var input = document.getElementById('confirm-password-input');\n      var eye = document.getElementById('confirm-passeye');\n    }\n    if (input.getAttribute('type') == 'password') {\n      eye.classList.add('view');\n      input.setAttribute('type', 'text');\n    } else {\n      eye.classList.remove('view');\n      input.setAttribute('type', 'password');\n    }\n    return false;\n  }\n}","<form [formGroup]=\"authService.formModel\" autocomplete=\"off\" (submit)=\"onSubmit()\">\n    <div class=\"form-group required\">\n      <label>Имя пользователя</label>\n      <input class=\"form-control\" formControlName=\"UserName\">\n      <label class=\"text-danger\" *ngIf=\"authService.formModel.get('UserName').touched && authService.formModel.get('UserName').errors?.required\">\n        Это поле обязательно.\n      </label>\n    </div>\n    <div class=\"form-group required\">\n      <label>Почта</label>\n      <input class=\"form-control\" formControlName=\"Email\">\n      <label class=\"text-danger\" *ngIf=\"authService.formModel.get('Email').touched && authService.formModel.get('Email').errors?.required\">\n        Это поле обязательно.\n      </label>\n      <label class=\"text-danger\" *ngIf=\"authService.formModel.get('Email').touched && authService.formModel.get('Email').errors?.email\">\n        Почта введена неверно.\n      </label>\n    </div>\n    <div formGroupName=\"Passwords\">\n      <div class=\"form-group required\">\n        <label>Пароль</label>\n        <div class=\"password\">\n          <input type=\"password\" id=\"password-input\" class=\"form-control\" formControlName=\"Password\">\n          <a href=\"#\" id=\"passeye\" class=\"password-control\" (click)=\"show_hide_password(pas1)\"></a>\n        </div>\n        <label class=\"text-danger\" *ngIf=\"authService.formModel.get('Passwords.Password').touched && authService.formModel.get('Passwords.Password').errors?.required\">\n          Это поле обязательно.\n        </label>\n        <label class=\"text-danger\" *ngIf=\"authService.formModel.get('Passwords.Password').touched && authService.formModel.get('Passwords.Password').errors?.minlength\">\n          Пароль должен состоять минимум из 6 символов.\n        </label>\n      </div>\n      <div class=\"form-group required\">\n        <label>Подтвердите пароль</label>\n        <div class=\"password\">\n          <input type=\"password\" id=\"confirm-password-input\" class=\"form-control\" formControlName=\"ConfirmPassword\">\n          <a href=\"#\" id=\"confirm-passeye\" class=\"password-control\" (click)=\"show_hide_password(pas2)\"></a>\n        </div>\n        <label class=\"text-danger\" *ngIf=\"authService.formModel.get('Passwords.ConfirmPassword').touched && authService.formModel.get('Passwords.ConfirmPassword').errors?.required\">\n          Это поле обязательно.\n        </label>\n        <label class=\"text-danger\" *ngIf=\"authService.formModel.get('Passwords.ConfirmPassword').touched && authService.formModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\">\n          Пароли не совпадают.\n        </label>\n      </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-8 offset-md-2\">\n        <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"!authService.formModel.valid\">Зарегистрироваться</button>\n      </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  userId: string;\n  token: string;\n  emailConfirmed: boolean;\n  pas1: string = \"password\";\n  pas2: string = \"confirmPassword\";\n\n  constructor(private activatedRoute: ActivatedRoute, public authService: AuthService, private toastr: ToastrService, private router: Router) {\n    this.activatedRoute.queryParams.subscribe(params => {\n          this.userId = params['userId'];\n          this.token = params['token'];\n      });\n  }\n\n  ngOnInit(): void {\n    this.authService.passwordsModel.reset(); \n  }\n  \n  onSubmit(){\n    this.authService.resetPassword(this.userId, this.token).subscribe(\n      (res: any) => { \n      if (res.succeeded) {\n        this.router.navigateByUrl('/user/login');\n        this.toastr.success('Пароль был изменен.', 'Успешно.');\n      } \n      else {\n        res.errors.forEach(element => {\n          this.toastr.error(element.description,'Пароль не был изменен.');\n        });\n      }\n     },\n     err => {\n       this.toastr.error('Что-то пошло не так.', 'Пароль не был изменен.');\n     });\n  }\n\n  show_hide_password(el){\n    if(el == \"password\"){\n      var input = document.getElementById('password-input');\n      var eye = document.getElementById('passeye');\n    }\n    else{\n      var input = document.getElementById('confirm-password-input');\n      var eye = document.getElementById('confirm-passeye');\n    }\n    if (input.getAttribute('type') == 'password') {\n      eye.classList.add('view');\n      input.setAttribute('type', 'text');\n    } else {\n      eye.classList.remove('view');\n      input.setAttribute('type', 'password');\n    }\n    return false;\n  }\n}\n","<form [formGroup]=\"authService.passwordsModel\" autocomplete=\"off\" (submit)=\"onSubmit()\">\n    <div formGroupName=\"Passwords\">\n      <div class=\"form-group required\">\n        <label>Новый пароль</label>\n        <div class=\"password\">\n          <input type=\"password\" id=\"password-input\" class=\"form-control\" formControlName=\"Password\">\n          <a href=\"#\" id=\"passeye\" class=\"password-control\" (click)=\"show_hide_password(pas1)\"></a>\n        </div>\n        <label class=\"text-danger\" *ngIf=\"authService.passwordsModel.get('Passwords.Password').touched && authService.passwordsModel.get('Passwords.Password').errors?.required\">\n          Это поле обязательно.\n        </label>\n        <label class=\"text-danger\" *ngIf=\"authService.passwordsModel.get('Passwords.Password').touched && authService.passwordsModel.get('Passwords.Password').errors?.minlength\">\n          Пароль должен состоять минимум из 6 символов.\n        </label>\n      </div> \n      <div class=\"form-group required\">\n        <label>Подтвердите пароль</label>\n        <div class=\"password\">\n          <input type=\"password\" id=\"confirm-password-input\" class=\"form-control\" formControlName=\"ConfirmPassword\">\n          <a href=\"#\" id=\"confirm-passeye\" class=\"password-control\" (click)=\"show_hide_password(pas2)\"></a>\n        </div>\n        <label class=\"text-danger\" *ngIf=\"authService.passwordsModel.get('Passwords.ConfirmPassword').touched && authService.passwordsModel.get('Passwords.ConfirmPassword').errors?.required\">\n          Это поле обязательно.\n        </label>\n        <label class=\"text-danger\" *ngIf=\"authService.passwordsModel.get('Passwords.ConfirmPassword').touched && authService.passwordsModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\">\n          Пароли не совпадают.\n        </label>\n      </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-8 offset-md-2\">\n        <button type=\"submit\" class=\"btn btn-lg btn-block\" [disabled]=\"!authService.passwordsModel.valid\">Сохранить</button>\n      </div>\n    </div>\n  </form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"wrapped-div\">\n      <div class=\"tab-header\"> \n        <h2 class=\"w-100 col-4 text-center\" routerLink='/user/login' routerLinkActive='active'>Войти</h2>\n        <h2 class=\"w-100 col-4 text-center\" routerLink='/user/registration' routerLinkActive='active'>Регистрация</h2>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-10 offset-md-1\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://ec2-3-21-231-5.us-east-2.compute.amazonaws.com:8080/api/'\n};\n// http://localhost:8080/api/ docker\n// https://localhost:44340/api/ local\n// http://ec2-3-21-231-5.us-east-2.compute.amazonaws.com:8080/api/ aws\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}