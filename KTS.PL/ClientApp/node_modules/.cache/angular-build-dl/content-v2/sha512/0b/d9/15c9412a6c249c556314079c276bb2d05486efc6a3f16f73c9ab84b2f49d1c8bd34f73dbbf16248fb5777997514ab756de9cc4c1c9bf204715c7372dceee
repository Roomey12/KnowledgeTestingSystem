{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/data.service.ts","webpack:///src/app/test.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","dataService","test","tableMode","loadProducts","getTests","subscribe","data","tests","selector","templateUrl","providers","AppModule","imports","declarations","bootstrap","DataService","http","url","get","Test","platform","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { Test } from './test';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './app.component.html',\r\n    providers: [DataService]\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n\r\n    test: Test = new Test();   // изменяемый товар\r\n    tests: Test[];                // массив товаров\r\n    tableMode: boolean = true;          // табличный режим\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadProducts();    // загрузка данных при старте компонента  \r\n    }\r\n    // получаем данные через сервис\r\n    loadProducts() {\r\n        this.dataService.getTests()\r\n            .subscribe((data: Test[]) => this.tests = data);\r\n    }\r\n}","<h1>Список тестов</h1>\r\n<table class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <td>Тест</td>\r\n            <td>Описание</td>\r\n            <td>Бал</td>\r\n            <td>Время</td>\r\n        </tr>\r\n    </thead> \r\n    <tbody>\r\n        <tr *ngFor=\"let p of tests\">\r\n            <ng-template [ngIf]=\"product?.id != p.id\" [ngIfElse]=\"edit\">\r\n                <td>{{t?.Title}}</td>\r\n                <td>{{t?.Description}}</td>\r\n                <td>{{t?.MaxScore}}</td>\r\n                <td>{{t?.MaxTime}}</td>\r\n            </ng-template>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n    imports: [BrowserModule, FormsModule, HttpClientModule],\r\n    declarations: [AppComponent],\r\n    bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Test } from './test';\r\n\r\n@Injectable()\r\nexport class DataService {//experimental decorations\r\n\r\n    private url = \"/api/tests\";\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getTests() {\r\n        return this.http.get(this.url);\r\n    }\r\n}","export class Test {\r\n    TestId: number;\r\n    Title: string;\r\n    MaxScore: number;\r\n    Description: string;\r\n    MaxTime: Date;\r\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nenableProdMode();\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);"]}